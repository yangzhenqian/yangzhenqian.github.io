"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3],{8229:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-2de2c0ea",path:"/zhengze/zhengze.html",title:"正则",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"zhengze/zhengze.md",git:{updatedTime:1705559916e3,contributors:[{name:"yangzhenqian",email:"zhenqian.yang@i-tage.com",commits:1}]}}},7955:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const e=(0,s(6252).uE)('<h1 id="正则" tabindex="-1"><a class="header-anchor" href="#正则" aria-hidden="true">#</a> 正则</h1><ol><li>手机号添加分割线</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> phone <span class="token operator">=</span> <span class="token string">&#39;12345678901&#39;</span><span class="token punctuation">;</span>\nphone<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{3})(\\d{4})(\\d{4})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$1-$2-$3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 123-4567-8901</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li></li></ol>',4),t={},p=(0,s(3744).Z)(t,[["render",function(n,a){return e}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);