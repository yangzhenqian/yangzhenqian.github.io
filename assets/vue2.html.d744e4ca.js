import{o as a,c as p,a as n,t,F as e,d as s,e as o}from"./app.c3ff6c08.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";var l="/images/vue/vue2/MVVM.jpg",u="/images/vue/vue2/\u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406.png",i="/images/vue/vue2/\u6570\u7EC4\u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406.png",r="/images/vue/vue2/\u4E3A\u4F55\u5F02\u6B65\u6E32\u67D3.png",k="/images/vue/vue2/nextTick\u539F\u7406\u5256\u6790.png",b="/images/vue/vue2/\u8BA1\u7B97\u5C5E\u6027.png",m="/images/vue/vue2/lifecycle.png",d="/images/vue/vue2/\u751F\u547D\u5468\u671F.png",h="/images/vue/vue2/vue-diff.jpg",g="/images/vue/vue2/diff-key.jpg",f="/images/vue/vue2/\u7EC4\u4EF6\u6E32\u67D3\u6D41\u7A0B.png",v="/images/vue/vue2/\u4E8B\u4EF6\u521D\u59CB\u5316.png",y="/images/vue/vue2/\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F-1582263422513.png",w="/images/vue/vue2/\u63D2\u69FD.png";const x={},q=s(`<h1 id="vue2" tabindex="-1"><a class="header-anchor" href="#vue2" aria-hidden="true">#</a> vue2</h1><p>\u6838\u5FC3\u529F\u80FD</p><ol><li>\u54CD\u5E94\u5F0F</li><li>\u6A21\u677F\u7F16\u8BD1</li><li>\u865A\u62DF dom (vdom)</li></ol><h2 id="\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F</h2><h4 id="\u4E0D\u5F97\u4E0D\u63D0\u7684-object-defineproperty" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u5F97\u4E0D\u63D0\u7684-object-defineproperty" aria-hidden="true">#</a> \u4E0D\u5F97\u4E0D\u63D0\u7684 Object.defineProperty</h4><h5 id="object-defineproperty-obj-prop-descriptor" tabindex="-1"><a class="header-anchor" href="#object-defineproperty-obj-prop-descriptor" aria-hidden="true">#</a> Object.defineProperty(obj, prop, descriptor)</h5><ul><li>obj: \u5FC5\u987B\u3002\u76EE\u6807\u5BF9\u8C61</li><li>prop: \u5FC5\u987B\u3002 \u9700\u5B9A\u4E49\u6216\u4FEE\u6539\u5C5E\u6027\u7684\u540D\u5B57</li><li>descriptor: \u5FC5\u987B\u3002\u76EE\u6807\u5C5E\u6027\u6240\u62E5\u6709\u7684\u4ED6\u7279\u6027 <ul><li>value \u88AB\u5B9A\u4E49\u7684\u5C5E\u6027\u9ED8\u8BA4\u4E3A undefined</li><li>wraitable \u662F\u5426\u53EF\u4EE5\u88AB\u91CD\u5199\u3002 true \u4E3A\u53EF\u91CD\u5199\uFF0Cfalse \u4E3A\u4E0D\u53EF\u91CD\u5199</li><li>enumerable \u662F\u5426\u53EF\u4EE5\u88AB\u679A\u4E3E(for...in \u6216 Object.keys())\u3002 true \u4E3A\u53EF\u679A\u4E3E\uFF0Cfalse \u4E3A\u4E0D\u53EF\u679A\u4E3E</li><li>configurable \u662F\u5426\u53EF\u4EE5\u5220\u9664\u6216\u4FEE\u6539\u76EE\u6807\u5C5E\u6027\u3002true \u4E3A\u53EF\u4EE5\u5220\u9664\u6216\u4FEE\u6539\u76EE\u6807\u5C5E\u6027\uFF0Cfalse \u5219\u4E0D\u80FD\u88AB\u5220\u9664\u6216\u8005\u4FEE\u6539\u76EE\u6807\u5C5E\u6027</li></ul></li></ul><h5 id="\u5B58\u53D6\u5668-getter-setter" tabindex="-1"><a class="header-anchor" href="#\u5B58\u53D6\u5668-getter-setter" aria-hidden="true">#</a> \u5B58\u53D6\u5668 getter/setter</h5><p><code>\u5F53\u4F7F\u7528\u4E86getter\u6216setter\u65B9\u6CD5\u4E0D\u5141\u8BB8\u4F7F\u7528value\u548Cwritable\u8FD9\u4E24\u4E2A\u5C5E\u6027</code></p><ul><li>getter \u5F53\u8BBF\u95EE\u6539\u5C5E\u6027\u65F6\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u88AB\u6267\u884C\u3002\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F1A\u4F5C\u4E3A\u8BE5\u5C5E\u6027\u7684\u503C\u8FD4\u56DE</li><li>setter \u5F53\u5C5E\u6027\u503C\u4FEE\u6539\u65F6\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u88AB\u6267\u884C\u3002\u8BE5\u65B9\u6CD5\u63A5\u53D7\u552F\u4E00\u53C2\u6570\uFF0C\u5373\u6539\u5C5E\u6027\u65B0\u7684\u53C2\u6570\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;ray&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;newkey&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> msg<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    msg <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u83B7\u53D6\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>newkey<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span>
<span class="token comment">// \u8BBE\u7F6E\u503C</span>
obj<span class="token punctuation">.</span>newkey <span class="token operator">=</span> <span class="token string">&#39;hello,world&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>newkey<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello world</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u6A21\u677F\u7F16\u8BD1" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u7F16\u8BD1" aria-hidden="true">#</a> \u6A21\u677F\u7F16\u8BD1</h2><p>\u7B80\u5355\u6765\u8BB2\uFF0C\u5C31\u662F\u5C06 template \u7F16\u8BD1\u6210 render \u51FD\u6570\u7684\u8FC7\u7A0B\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u5927\u81F4\u53EF\u4EE5\u5206\u4E3A\u4E09\u4E2A\u9636\u6BB5</p><ul><li>\u89E3\u6790\u9636\u6BB5</li></ul><p>\u5C06\u6A21\u677F\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A ast</p><ul><li>\u4F18\u5316\u9636\u6BB5</li></ul><p>\u5BF9 ast \u8FDB\u884C\u9759\u6001\u8282\u70B9\u6807\u8BB0\uFF0C\u4E3B\u8981\u7528\u6765\u505A vdom \u7684\u6E32\u67D3\u4F18\u5316</p><ul><li>\u751F\u6210\u9636\u6BB5</li></ul><p>\u901A\u8FC7 ast \u751F\u6210\u4EE3\u7801\u5B57\u7B26\u4E32\uFF0C\u5E76\u6700\u7EC8\u751F\u6210 render \u51FD\u6570</p><p>\u770B\u770B vue-template-compiler \u6E90\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token function">createCompilerCreator</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">baseCompile</span> <span class="token punctuation">(</span>
  template<span class="token punctuation">,</span> <span class="token comment">// \u6A21\u677F\u5B57\u7B26\u4E32</span>
  options
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7B2C\u4E00\u6B65  \u5C06\u6A21\u677F\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A ast</span>
  <span class="token keyword">var</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u7B2C\u4E8C\u6B65  \u5BF9 ast \u8FDB\u884C\u9759\u6001\u8282\u70B9\u6807\u8BB0\uFF0C\u4E3B\u8981\u7528\u6765\u505A vdom \u7684\u6E32\u67D3\u4F18\u5316</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>optimize <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7B2C\u4E09\u6B65 \u901A\u8FC7 ast \u751F\u6210\u4EE3\u7801\u5B57\u7B26\u4E32\uFF0C\u5E76\u6700\u7EC8\u751F\u6210 render \u51FD\u6570</span>
  <span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    ast<span class="token operator">:</span> ast<span class="token punctuation">,</span>
    render<span class="token operator">:</span> code<span class="token punctuation">.</span>render<span class="token punctuation">,</span>
    staticRenderFns<span class="token operator">:</span> code<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u89E3\u6790\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6790\u9636\u6BB5" aria-hidden="true">#</a> \u89E3\u6790\u9636\u6BB5</h3><p>\u5148\u770B\u770B\u89E3\u6790\u51FA\u6765\u7684 ast \u5230\u5E95\u662F\u4EC0\u4E48</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">const</span> compiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div id=&#39;app&#39;&gt;{{message}}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6267\u884C\u4EE3\u7801</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>node index.js
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u89E3\u6790\u7ED3\u679C</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;ast&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 1-\u5143\u7D20\u8282\u70B9 2-\u5E26\u53D8\u91CF\u7684\u6587\u672C\u8282\u70B9 3-\u7EAF\u6587\u672C\u8282\u70B9</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;attrsList&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;attrsMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;rawAttrsMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token property">&quot;expression&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_s(message)&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;tokens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;@binding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;message&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;{{message}}&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;static&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;plain&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;attrs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\&quot;app\\&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;static&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;staticRoot&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;render&quot;</span><span class="token operator">:</span> <span class="token string">&quot;with(this){return _c(&#39;div&#39;,{attrs:{\\&quot;id\\&quot;:\\&quot;app\\&quot;}},[_v(_s(message))])}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;staticRenderFns&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;errors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tips&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u7CBE\u7B80\u4E00\u4E0B</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;parent&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token property">&quot;expression&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_s(message)&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;tokens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token property">&quot;@binding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;message&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;text&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;{{message}}&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;static&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u6587\u672C\u8282\u70B9\u7F16\u8BD1\u524D\u7684\u5B57\u7B26\u4E32</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="vue-\u662F\u5982\u4F55\u5C06\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u6210-ast-\u8BED\u6CD5\u6811\u7684" tabindex="-1"><a class="header-anchor" href="#vue-\u662F\u5982\u4F55\u5C06\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u6210-ast-\u8BED\u6CD5\u6811\u7684" aria-hidden="true">#</a> vue \u662F\u5982\u4F55\u5C06\u6A21\u677F\u5B57\u7B26\u4E32\u89E3\u6790\u6210 ast \u8BED\u6CD5\u6811\u7684</h4><h5 id="\u6765\u770B\u770B\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6765\u770B\u770B\u6E90\u7801" aria-hidden="true">#</a> \u6765\u770B\u770B\u6E90\u7801</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token operator">...</span>


  <span class="token comment">// \u901A\u8FC7\u4E00\u4E2A\u6808\u6765\u7EF4\u62A4dom\u7684\u5C42\u7EA7</span>
  <span class="token keyword">var</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u62BD\u8C61\u8BED\u6CD5\u6811\u7684\u6839\u8282\u70B9\uFF0C\u5728\u89E3\u6790\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u4E0D\u65AD\u7ED9\u5B83\u6DFB\u52A0\u5B50\u5B59\u8282\u70B9</span>
  <span class="token keyword">var</span> root<span class="token punctuation">;</span>
  <span class="token comment">// \u5F53\u524D\u89E3\u6790\u5185\u5BB9\u7684\u7236\u8282\u70B9</span>
  <span class="token keyword">var</span> currentParent<span class="token punctuation">;</span>

  <span class="token function">parseHTML</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5339\u914D\u5230\u5F00\u59CB\u6807\u7B7E\u65F6\u7684\u56DE\u8C03</span>
    <span class="token comment">// \u5F53\u5339\u914D\u5230\u5F00\u59CB\u6807\u7B7E\uFF0C\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5143\u7D20\u7C7B\u578B\u7684\u6811\u8282\u70B9\uFF0C\u5982\u679C\u5F53\u524D\u4E0D\u5B58\u5728\u6839\u8282\u70B9\uFF0C\u5219\u8BBE\u7F6E\u4E3A\u6839\u8282\u70B9\uFF0C\u5982\u4E0D\u5B58\u5728\uFF0C\u5219\u5C06\u5176\u8BBE\u7F6E\u4E3AcurrentParent\u7684\u5B50\u8282\u70B9</span>
    <span class="token comment">// \u7136\u540E\u5C06\u5F53\u524D\u8282\u70B9\u538B\u5165stack\u6808\u4E2D\uFF0C\u5E76\u5C06\u5B83\u8BBE\u7F6E\u4E3AcurrentParent</span>
    <span class="token function-variable function">start</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">start</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> unary</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// tag\u4E3A\u5F53\u524D\u7684\u6807\u7B7E\u540D</span>
      <span class="token comment">// attrs\u4E3A\u5F53\u524D\u6807\u7B7E\u4E0A\u7684\u5C5E\u6027\u5217\u8868</span>
      <span class="token comment">// unary \u5F53\u524D\u6807\u7B7E\u662F\u5426\u4E3A\u95ED\u5408\u6807\u7B7E</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u5339\u914D\u5230\u7ED3\u675F\u6807\u7B7E\u65F6\u7684\u56DE\u8C03</span>
    <span class="token comment">// \u5339\u914D\u5230\u7ED3\u675F\u6807\u7B7E\u65F6\u4F1A\u4ECE\u6808\u4E2D\u5F39\u51FA\u4E00\u4E2A\u8282\u70B9\uFF0C\u5E76\u5C06\u6808\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u8BBE\u7F6E\u4E3AcurrentParent</span>
    <span class="token function-variable function">end</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">end</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> start</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5339\u914D\u5230\u6587\u672C\u8282\u70B9\u7684\u56DE\u8C03</span>
    <span class="token comment">// \u5339\u914D\u5230\u6587\u672C\u8282\u70B9\u540E\uFF0C\u4F1A\u6709text\u8FDB\u4E00\u6B65\u5206\u6790\uFF0C\u5224\u65AD\u662F\u9759\u6001\u5B57\u7B26\u4E32\u8FD8\u662F{{}}\u7ED1\u5B9A\u7684\u5B57\u7B26\u4E32\u53D8\u91CF\uFF0C\u521B\u5EFA\u4E0D\u540C\u7684\u6587\u672C\u8282\u70B9\uFF0C\u5E76\u5C06\u5176\u8BBE\u7F6E\u4E3AcurrentParent\u7684\u5B50\u8282\u70B9</span>
    <span class="token function-variable function">chars</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">chars</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5339\u914D\u5230\u6CE8\u91CA\u8282\u70B9\u7684\u56DE\u8C03\uFF0C\u5176\u5904\u7406\u903B\u8F91\u8DDF\u6587\u672C\u5904\u7406\u903B\u8F91\u76F8\u4F3C</span>
    <span class="token function-variable function">comment</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">comment</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token operator">...</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h5 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h5><p><code>\u601D\u8DEF\uFF1A</code></p><p>\u4EE5<code>&lt;</code>\u4E3A\u6807\u8BC6\u7B26\uFF0C\u4EE3\u8868\u4E00\u4E2A\u5F00\u59CB\u6807\u7B7E\u6216\u8005\u7ED3\u675F\u6807\u7B7E\uFF0C\u5982\u679C\u662F\u5F00\u59CB\u6807\u7B7E\uFF0C\u4EE3\u8868\u6811\u7684\u5C42\u7EA7\u52A0\u4E86\u4E00\u5C42\uFF0C\u5982\u679C\u662F\u7ED3\u675F\u6807\u7B7E\u4EE3\u8868\u5C42\u7EA7\u56DE\u9000\u4E86\u4E00\u5C42\u3002\u540C\u65F6\u6BCF\u4E00\u5C42\u90FD\u8981\u8BB0\u5F55\u4ED6\u7684\u7236\u5143\u7D20</p><p>\u7528\u4E00\u4E2A\u6808\u53BB\u7EF4\u62A4\u5C42\u7EA7\uFF0C\u6709\u5F00\u59CB\u6807\u7B7E\u5219\u5165\u6808\uFF0C\u7ED3\u675F\u6807\u7B7E\u5219\u51FA\u6808\uFF0C\u6807\u7B7E\u4E4B\u524D\u82E5\u662F\u6587\u672C\u8282\u70B9\uFF0C\u6587\u672C\u8282\u70B9\u4E0D\u5BF9\u6808\u8FDB\u884C\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u89E3\u6790\u6A21\u677F\u5B57\u7B26\u4E32\u4E3AAST\u8BED\u6CD5\u6811
 *
 * \u6A21\u677F\u5B57\u7B26\u4E32\u7684\u622A\u53D6\u6B65\u9AA4
 * 0 &lt;div&gt;111&lt;p&gt;222&lt;/p&gt;&lt;/div&gt;
 * 1 111&lt;p&gt;222&lt;/p&gt;&lt;/div&gt;
 * 2 &lt;p&gt;222&lt;/p&gt;&lt;/div&gt;
 * 3 222&lt;/p&gt;&lt;/div&gt;
 * 4 &lt;/p&gt;&lt;/div&gt;
 * 5 &lt;/div&gt;
 * 6 &quot;&quot;
 */</span>

<span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;111&lt;p&gt;222&lt;/p&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span><span class="token parameter">template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u6808</span>
  <span class="token keyword">let</span> root<span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u6839\u8282\u70B9</span>
  <span class="token keyword">let</span> currentParent<span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7236\u5143\u7D20\uFF0C\u7EF4\u62A4\u5C42\u7EA7\u5173\u7CFB</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u6587\u672C\u8282\u70B9</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B9A\u4E49\u6587\u672C\u8282\u70B9\u7ED3\u6784</span>
      <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        parent<span class="token operator">:</span> currentParent<span class="token punctuation">,</span>
        text<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> gtIndex <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u5F00\u59CB\u6807\u7B7E</span>
      <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        tag<span class="token operator">:</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> gtIndex<span class="token punctuation">)</span><span class="token punctuation">,</span>
        parent<span class="token operator">:</span> currentParent<span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token comment">// \u5224\u65AD\u6839\u8282\u70B9\u662F\u5426\u5B58\u5728\uFF0C\u5982\u679C\u6839\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u5C06\u5F53\u524D\u5143\u7D20\u8BBE\u7F6E\u4E3A\u6839\u8282\u70B9\uFF0C\u5426\u5219push\u5230\u5F53\u524D\u7236\u5143\u7D20\u7684children\u4E2D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        root <span class="token operator">=</span> element<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5165\u6808</span>
      currentParent <span class="token operator">=</span> element<span class="token punctuation">;</span> <span class="token comment">// \u5BF9\u5F53\u524D\u7236\u5143\u7D20\u8FDB\u884C\u8D4B\u503C</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>gtIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u622A\u53D6\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u7ED3\u675F\u6807\u7B7E</span>

      <span class="token keyword">const</span> gtIndex <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51FA\u6808</span>
      currentParent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5BF9\u5F53\u524D\u7236\u5143\u7D20\u8FDB\u884C\u8D4B\u503C</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>gtIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u622A\u53D6\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> root<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u6839\u8282\u70B9</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div>`,38),_=o("\u597D\u4E86\uFF0C\u4E0A\u9762\u662F\u6700\u57FA\u672C\u7684\u6A21\u677F\u5B57\u7B26\u4E32\u7684\u5904\u7406\uFF0C\u63A5\u4E0B\u6765\u8FD8\u8981\u5904\u7406\u5173\u952E\u7684"),j=s(`<p><code>\u601D\u8DEF\uFF1A</code></p><p>\u5C31\u662F\u5224\u65AD<code>{{</code>\u548C<code>}}</code>,\u7136\u540E\u53D6\u51FA\u4E2D\u95F4\u7684\u53D8\u91CF(\u503C\u3001\u8868\u8FBE\u5F0F\u7B49)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parseText</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> originText <span class="token operator">=</span> text<span class="token punctuation">;</span>
  <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 2-\u5E26\u53D8\u91CF\u7684\u6587\u672C\u8282\u70B9 3-\u7EAF\u6587\u672C\u8282\u70B9</span>
  <span class="token keyword">let</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> start <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;{{&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> end <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;}}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5B58\u5728\u63D2\u503C\u53D8\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> end <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

      <span class="token comment">// start&gt;0 \u8BF4\u660E\u524D\u9762\u8FD8\u6709\u7EAF\u6587\u672C;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> exp <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
      tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_s(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>end <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      text <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
    text<span class="token operator">:</span> originText<span class="token punctuation">,</span>
    type<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span>expression <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tokens<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u7ED3\u5408\u8D77\u6765</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{msg1}}&lt;p&gt;{{msg2}}&lt;/p&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span><span class="token parameter">template</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u6808</span>
  <span class="token keyword">let</span> root<span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4E49\u6839\u8282\u70B9</span>
  <span class="token keyword">let</span> currentParent<span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7236\u5143\u7D20\uFF0C\u7EF4\u62A4\u5C42\u7EA7\u5173\u7CFB</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u6587\u672C\u8282\u70B9</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5B9A\u4E49\u6587\u672C\u8282\u70B9\u7ED3\u6784</span>
      <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token function">parseText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
      currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> gtIndex <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u5F00\u59CB\u6807\u7B7E</span>
      <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        tag<span class="token operator">:</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> gtIndex<span class="token punctuation">)</span><span class="token punctuation">,</span>
        parent<span class="token operator">:</span> currentParent<span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token comment">// \u5224\u65AD\u6839\u8282\u70B9\u662F\u5426\u5B58\u5728\uFF0C\u5982\u679C\u6839\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u5C06\u5F53\u524D\u5143\u7D20\u8BBE\u7F6E\u4E3A\u6839\u8282\u70B9\uFF0C\u5426\u5219push\u5230\u5F53\u524D\u7236\u5143\u7D20\u7684children\u4E2D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        root <span class="token operator">=</span> element<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5165\u6808</span>
      currentParent <span class="token operator">=</span> element<span class="token punctuation">;</span> <span class="token comment">// \u5BF9\u5F53\u524D\u7236\u5143\u7D20\u8FDB\u884C\u8D4B\u503C</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>gtIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u622A\u53D6\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF4\u660E\u662F\u7ED3\u675F\u6807\u7B7E</span>

      <span class="token keyword">const</span> gtIndex <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51FA\u6808</span>
      currentParent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5BF9\u5F53\u524D\u7236\u5143\u7D20\u8FDB\u884C\u8D4B\u503C</span>
      template <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>gtIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u622A\u53D6\u5B57\u7B26\u4E32</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> root<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u6839\u8282\u70B9</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseText</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> originText <span class="token operator">=</span> text<span class="token punctuation">;</span>
  <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 2-\u5E26\u53D8\u91CF\u7684\u6587\u672C\u8282\u70B9 3-\u7EAF\u6587\u672C\u8282\u70B9</span>
  <span class="token keyword">let</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> start <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;{{&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> end <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;}}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5B58\u5728\u63D2\u503C\u53D8\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> end <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

      <span class="token comment">// start&gt;0 \u8BF4\u660E\u524D\u9762\u8FD8\u6709\u7EAF\u6587\u672C;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> exp <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
      tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_s(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>end <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      text <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
    text<span class="token operator">:</span> originText<span class="token punctuation">,</span>
    type<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span>expression <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tokens<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseHTML</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><p><code>\u90A3\u4E48\u5230\u8FD9\u91CC\uFF0C\u662F\u4E0D\u662F\u5BF9vue\u7EC4\u4EF6\u4E2Dtemplate\u4E0B\u53EA\u80FD\u6709\u4E00\u4E2A\u6839\u5143\u7D20\u7684\u95EE\u9898\u604D\u7136\u5927\u609F\u4E86 \uFF1F</code></p><h3 id="\u751F\u6210\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u9636\u6BB5" aria-hidden="true">#</a> \u751F\u6210\u9636\u6BB5</h3><p>\u5C06 ast \u8F6C\u6362\u6210 render \u51FD\u6570</p><p>\u5148\u770B\u4E00\u4E0B\u6E90\u7801\u4E2D\u7684\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// vue-template-compiler/build.js</span>

<span class="token operator">...</span>

<span class="token keyword">function</span> <span class="token function">generate</span> <span class="token punctuation">(</span>
  <span class="token parameter">ast<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodegenState</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> code <span class="token operator">=</span> ast <span class="token operator">?</span> <span class="token punctuation">(</span>ast<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;script&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;null&#39;</span> <span class="token operator">:</span> <span class="token function">genElement</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;_c(&quot;div&quot;)&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    render<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;with(this){return &quot;</span> <span class="token operator">+</span> code <span class="token operator">+</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    staticRenderFns<span class="token operator">:</span> state<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token operator">...</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u6E90\u7801\u7684\u5B9E\u73B0\u7684\u601D\u8DEF\u5927\u81F4\u4E3A\uFF1A</p><ol><li>\u9012\u5F52 ast\uFF0C\u9047\u5230\u5143\u7D20\u8282\u70B9\u5219\u751F\u6210 <code>_c(\u6807\u7B7E\u540D\uFF0C\u5C5E\u6027\u5BF9\u8C61\uFF0C\u540E\u4EE3\u6570\u7EC4)</code> \u683C\u5F0F\u7684\u5B57\u7B26\u4E32</li><li>\u9047\u5230\u6587\u672C\u8282\u70B9\uFF0C\u82E5\u662F\u7EAF\u6587\u672C\uFF0C\u5219\u751F\u6210 <code>_v(\u6587\u672C\u5B57\u7B26\u4E32)</code> \u683C\u5F0F\u7684\u5B57\u7B26\u4E32</li><li>\u82E5\u662F\u5E26\u53D8\u91CF\u7684\u6587\u672C\u8282\u70B9\uFF0C\u5219\u751F\u6210 <code>_v(_s(\u53D8\u91CF\u540D))</code> \u683C\u5F0F\u7684\u5B57\u7B26\u4E32</li><li>\u4E3A\u4E86\u80FD\u8BA9\u53D8\u91CF\u80FD\u6B63\u5E38\u53D6\u5230\uFF0C \u751F\u6210\u6700\u540E\u5C06\u5B57\u7B26\u4E32\u5305\u4E00\u5C42 <code>with(this)</code></li><li>\u6700\u540E\u76F4\u63A5\u628A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u51FD\u6570\u4F53\u751F\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u6302\u8F7D\u5230<code>vm.$options</code>\u4E0A\uFF0C\u5728 vue \u4E2D\u53EF\u4EE5<code>vm.$options.render</code>\u67E5\u770B render \u51FD\u6570</li><li>\u6267\u884C render \u51FD\u6570\uFF0C\u4FBF\u751F\u6210\u4E86 vnode</li></ol><h4 id="\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B-vue-\u4E2D\u4E00\u4E9B\u8BED\u6CD5\u4E8B\u4EF6\u7B49\u7ECF\u8FC7\u6A21\u677F\u7F16\u8BD1\u51FA\u6765\u662F\u4EC0\u4E48\u6837\u7684" tabindex="-1"><a class="header-anchor" href="#\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B-vue-\u4E2D\u4E00\u4E9B\u8BED\u6CD5\u4E8B\u4EF6\u7B49\u7ECF\u8FC7\u6A21\u677F\u7F16\u8BD1\u51FA\u6765\u662F\u4EC0\u4E48\u6837\u7684" aria-hidden="true">#</a> \u63A5\u4E0B\u6765\u770B\u4E00\u4E0B Vue \u4E2D\u4E00\u4E9B\u8BED\u6CD5\u4E8B\u4EF6\u7B49\u7ECF\u8FC7\u6A21\u677F\u7F16\u8BD1\u51FA\u6765\u662F\u4EC0\u4E48\u6837\u7684</h4><ul><li>\u63D2\u503C</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--  \`with(this){return _c(&#39;div&#39;,{attrs:{&quot;id&quot;:&quot;app&quot;}},[_v(_s(msg))])}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u63D2\u503C\u8868\u8FBE\u5F0F</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{msg ? &#39;\u5F20\u4E09&#39; : &#39;\u674E\u56DB&#39;}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;div&#39;,{attrs:{&quot;id&quot;:&quot;app&quot;}},[_v(_s(msg))])}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>v-if \u548C v-show</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vshow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u6211\u662Fv-show<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;div&#39;,{directives:[{name:&quot;show&quot;,rawName:&quot;v-show&quot;,value:(vshow),expression:&quot;vshow&quot;}]},[_v(&quot;\u6211\u662Fv-show&quot;)])}\` --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vIf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u6211\u662Fv-if<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return (vIf)?_c(&#39;div&#39;,[_v(&quot;\u6211\u662Fv-if&quot;)]):_e()}\` --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type===1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u5F20\u4E09<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>\u674E\u56DB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;div&#39;,{attrs:{&quot;id&quot;:&quot;app&quot;}},[(type===1)?_c(&#39;span&#39;,[_v(&quot;\u5F20\u4E09&quot;)]):_c(&#39;span&#39;,[_v(&quot;\u674E\u56DB&quot;)])])}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>v-for</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,index) in 3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;div&#39;,_l((3),function(item,index){return _c(&#39;span&#39;,{key:index},[_v(_s(item))])}),0)}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>v-bind</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgUrl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgUrl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>

 <span class="token comment">&lt;!-- \`with(this){return _c(&#39;img&#39;,{attrs:{&quot;src&quot;:imgUrl}})}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>v-model</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;input&#39;,{directives:[{name:&quot;model&quot;,rawName:&quot;v-model&quot;,value:(name),expression:&quot;name&quot;}],attrs:{&quot;type&quot;:&quot;text&quot;},domProps:{&quot;value&quot;:(name)},on:{&quot;input&quot;:function($event){if($event.target.composing)return;name=$event.target.value}}})}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>vue\u6A21\u677F\u7F16\u8BD1v-model\u7684\u65F6\u5019\u5176\u5B9E\u5C31\u662F\u76D1\u542Coninput\u4E8B\u4EF6\uFF0C\u5E76\u5C06\u8F93\u5165\u7684\u503C\u8D4B\u503C\u7ED9\u7ED1\u5B9A\u7684\u53D8\u91CF</code></p><ul><li>click \u4E8B\u4EF6</li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u70B9\u51FB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u70B9\u51FB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \`with(this){return _c(&#39;div&#39;,{on:{&quot;click&quot;:handleClick}},[_v(&quot;\u70B9\u51FB&quot;)])}\` --&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u865A\u62DF-dom" tabindex="-1"><a class="header-anchor" href="#\u865A\u62DF-dom" aria-hidden="true">#</a> \u865A\u62DF dom</h2><p>\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u4E00\u4E2A js \u5BF9\u8C61\uFF0C\u7528\u6765\u63CF\u8FF0\u5F53\u524D dom \u957F\u4EC0\u4E48\u6837</p><p>\u597D\u5904\uFF1A</p><ol><li>\u63D0\u5347\u6027\u80FD \u64CD\u4F5C js \u5BF9\u8C61\u5F88\u5FEB\uFF0C\u4F46\u64CD\u4F5C dom \u5143\u7D20\u5F88\u6162\u3002\u76F4\u63A5\u64CD\u4F5C dom \u4F1A\u5F88\u8017\u6027\u80FD \u89C6\u56FE\u901A\u8FC7 vdom \u6765\u63CF\u8FF0\uFF0C\u5F53\u6570\u636E\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u53EF\u4EE5\u5C06\u65B0\u65E7 vnode \u8FDB\u884C\u5BF9\u6BD4\uFF0C\u627E\u5230\u54EA\u91CC\u53D1\u751F\u4E86\u6539\u53D8\uFF0C\u518D\u53BB\u5BF9\u5E94\u7684 dom \u4E0A\u6539\u53D8\u76F8\u5E94\u5143\u7D20\uFF0C\u8FD9\u6837\u4F1A\u5927\u5927\u7684\u63D0\u5347\u6027\u80FD</li><li>\u8DE8\u5E73\u53F0\uFF08\u56E0\u4E3A\u662F\u7528 js \u63CF\u8FF0\u7684\uFF0C\u90A3\u4E48\u80FD\u7528 js \u7684\u90FD\u53EF\u4EE5\u4F7F\u7528 vdom\uFF09</li></ol><p>vdom \u673A\u5236\u4E2D\u6700\u6838\u5FC3\u7684\u662F patch\uFF0Cpatch \u903B\u8F91\u662F\u57FA\u4E8E<code>snabbdom</code>\u5E93\uFF0Cpatch \u7684\u8FC7\u7A0B\u4E3A\uFF1A</p><ul><li>patch \u51FD\u6570\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A\u65E7\u7684 vdom \u548C\u65B0\u7684 vdom</li><li>\u5F53\u7B2C\u4E00\u6B21\u6302\u8F7D\u65F6\u65E7\u7684 vdom \u662F\u4E00\u4E2A\u771F\u5B9E dom,\u5219\u5355\u72EC\u5904\u7406</li><li>\u540E\u7EED\u66F4\u65B0\u65F6\uFF0C\u5206\u4E3A\u5982\u4E0B\u4E09\u79CD\u60C5\u51B5 <ul><li>\u65B0\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u5219\u5220\u9664\u5BF9\u5E94\u7684 dom</li><li>\u65B0\u65E7\u8282\u70B9\u6807\u7B7E\u6216\u6587\u672C\u4E0D\u4E00\u6837\uFF0C\u5219\u521B\u5EFA\u65B0 dom \u5E76\u66FF\u6362\u65E7 dom</li><li>\u65E7\u8282\u70B9\u4E0D\u5B58\u5728\uFF0C\u65B0\u8282\u70B9\u5B58\u5728\uFF0C\u5219\u521B\u5EFA\u65B0 dom,\u5E76\u5728\u65E7 dom \u540E\u6DFB\u52A0\u65B0 dom</li><li>\u9012\u5F52\u4EE5\u4E0A\u903B\u8F91\uFF08\u540C\u7EA7\u6BD4\u8F83\uFF0C\u6DF1\u5EA6\u904D\u5386\uFF09</li></ul></li></ul><h2 id="\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55" aria-hidden="true">#</a> \u6269\u5C55</h2><h3 id="_1-\u8C08\u4E00\u4E0B\u4F60\u5BF9mvvm-\u539F\u7406\u7684\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_1-\u8C08\u4E00\u4E0B\u4F60\u5BF9mvvm-\u539F\u7406\u7684\u7406\u89E3" aria-hidden="true">#</a> 1.\u8C08\u4E00\u4E0B\u4F60\u5BF9<code>MVVM </code>\u539F\u7406\u7684\u7406\u89E3</h3><img src="`+l+'" alt="MVVM" style="zoom:50%;"><ul><li>\u4F20\u7EDF\u7684<code>MVC</code>\u6307\u7684\u662F,\u7528\u6237\u64CD\u4F5C\u4F1A\u8BF7\u6C42\u670D\u52A1\u7AEF\u8DEF\u7531\uFF0C\u8DEF\u7531\u4F1A\u8C03\u7528\u5BF9\u5E94\u7684\u63A7\u5236\u5668\u6765\u5904\u7406,\u63A7\u5236\u5668\u4F1A\u83B7\u53D6\u6570\u636E\u3002\u5C06\u7ED3\u679C\u8FD4\u56DE\u7ED9\u524D\u7AEF,\u9875\u9762\u91CD\u65B0\u6E32\u67D3</li><li><code>MVVM</code>:\u4F20\u7EDF\u7684\u524D\u7AEF\u4F1A\u5C06\u6570\u636E\u624B\u52A8\u6E32\u67D3\u5230\u9875\u9762\u4E0A,<code>MVVM</code>\u6A21\u5F0F\u4E0D\u9700\u8981\u7528\u6237\u6536\u5230\u64CD\u4F5C<code>dom</code>\u5143\u7D20,\u5C06\u6570\u636E\u7ED1\u5B9A\u5230<code>viewModel</code>\u5C42\u4E0A\uFF0C\u4F1A\u81EA\u52A8\u5C06\u6570\u636E\u6E32\u67D3\u5230\u9875\u9762\u4E2D\uFF0C\u89C6\u56FE\u53D8\u5316\u4F1A\u901A\u77E5<code>viewModel\u5C42</code>\u66F4\u65B0\u6570\u636E\u3002<code>ViewModel</code>\u5C31\u662F\u6211\u4EEC<code>MVVM</code>\u6A21\u5F0F\u4E2D\u7684\u6865\u6881.</li></ul><h3 id="_2-\u8BF7\u8BF4\u4E00\u4E0B\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u8BF7\u8BF4\u4E00\u4E0B\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u539F\u7406" aria-hidden="true">#</a> 2.\u8BF7\u8BF4\u4E00\u4E0B\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u539F\u7406\uFF1F</h3><h5 id="\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3" aria-hidden="true">#</a> \u7406\u89E3:</h5><ul><li>1.\u6838\u5FC3\u70B9:<code>Object.defineProperty</code></li><li>2.\u9ED8\u8BA4<code>Vue</code>\u5728\u521D\u59CB\u5316\u6570\u636E\u65F6\uFF0C\u4F1A\u7ED9<code>data</code>\u4E2D\u7684\u5C5E\u6027\u4F7F\u7528<code>Object.defineProperty</code>\u91CD\u65B0\u5B9A\u4E49\u6240\u6709\u5C5E\u6027,\u5F53\u9875\u9762\u53D6\u5230\u5BF9\u5E94\u5C5E\u6027\u65F6\u3002\u4F1A\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF08\u6536\u96C6\u5F53\u524D\u7EC4\u4EF6\u7684 watcher\uFF09 \u5982\u679C\u5C5E\u6027\u53D1\u751F\u53D8\u5316\u4F1A\u901A\u77E5\u76F8\u5173\u4F9D\u8D56\u8FDB\u884C\u66F4\u65B0\u64CD\u4F5C\u3002</li></ul><h5 id="\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406" aria-hidden="true">#</a> \u539F\u7406:</h5><p><img src="'+u+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  configurable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ** \u6536\u96C6\u4F9D\u8D56 ** /</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
    childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token doc-comment comment">/**\u901A\u77E5\u76F8\u5173\u4F9D\u8D56\u8FDB\u884C\u66F4\u65B0**/</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="_3-vue\u4E2D\u662F\u5982\u4F55\u68C0\u6D4B\u6570\u7EC4\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#_3-vue\u4E2D\u662F\u5982\u4F55\u68C0\u6D4B\u6570\u7EC4\u53D8\u5316" aria-hidden="true">#</a> 3.<code>Vue</code>\u4E2D\u662F\u5982\u4F55\u68C0\u6D4B\u6570\u7EC4\u53D8\u5316?</h3><h5 id="\u7406\u89E3-1" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-1" aria-hidden="true">#</a> \u7406\u89E3:</h5><ul><li>\u4F7F\u7528\u51FD\u6570\u52AB\u6301\u7684\u65B9\u5F0F\uFF0C\u91CD\u5199\u4E86\u6570\u7EC4\u7684\u65B9\u6CD5</li><li><code>Vue</code>\u5C06<code>data</code>\u4E2D\u7684\u6570\u7EC4\uFF0C\u8FDB\u884C\u4E86\u539F\u578B\u94FE\u91CD\u5199\u3002\u6307\u5411\u4E86\u81EA\u5DF1\u5B9A\u4E49\u7684\u6570\u7EC4\u539F\u578B\u65B9\u6CD5\uFF0C\u8FD9\u6837\u5F53\u8C03\u7528\u6570\u7EC4<code>api</code>\u65F6\uFF0C\u53EF\u4EE5\u901A\u77E5\u4F9D\u8D56\u66F4\u65B0.\u5982\u679C\u6570\u7EC4\u4E2D\u5305\u542B\u7740\u5F15\u7528\u7C7B\u578B\u3002\u4F1A\u5BF9\u6570\u7EC4\u4E2D\u7684\u5F15\u7528\u7C7B\u578B\u518D\u6B21\u8FDB\u884C\u76D1\u63A7\u3002</li></ul><h5 id="\u539F\u7406-1" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-1" aria-hidden="true">#</a> \u539F\u7406:</h5><p><img src="`+i+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> arrayMethods <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>arrayProto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> methodsToPatch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sort&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;reverse&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
methodsToPatch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u91CD\u5199\u539F\u578B\u65B9\u6CD5</span>
  <span class="token keyword">const</span> original <span class="token operator">=</span> arrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528\u539F\u6570\u7EC4\u7684\u65B9\u6CD5</span>
  <span class="token function">def</span><span class="token punctuation">(</span>arrayMethods<span class="token punctuation">,</span> method<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">mutator</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">original</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
    <span class="token keyword">let</span> inserted<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;push&#39;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&#39;unshift&#39;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;splice&#39;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> ob<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// notify change</span>
    ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u8C03\u7528\u6570\u7EC4\u65B9\u6CD5\u540E\uFF0C\u624B\u52A8\u901A\u77E5\u89C6\u56FE\u66F4\u65B0</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FDB\u884C\u6DF1\u5EA6\u76D1\u63A7</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="_4-\u4E3A\u4F55vue\u91C7\u7528\u5F02\u6B65\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#_4-\u4E3A\u4F55vue\u91C7\u7528\u5F02\u6B65\u6E32\u67D3" aria-hidden="true">#</a> 4.\u4E3A\u4F55<code>Vue</code>\u91C7\u7528\u5F02\u6B65\u6E32\u67D3?</h3><h5 id="\u7406\u89E3-2" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-2" aria-hidden="true">#</a> \u7406\u89E3\uFF1A</h5><p>\u56E0\u4E3A\u5982\u679C\u4E0D\u91C7\u7528\u5F02\u6B65\u66F4\u65B0\uFF0C\u90A3\u4E48\u6BCF\u6B21\u66F4\u65B0\u6570\u636E\u90FD\u4F1A\u5BF9\u5F53\u524D\u7EC4\u4EF6\u8FDB\u884C\u91CD\u65B0\u6E32\u67D3.\u6240\u4EE5\u4E3A\u4E86\u6027\u80FD\u8003\u8651\u3002<code>Vue</code>\u4F1A\u5728\u672C\u8F6E\u6570\u636E\u66F4\u65B0\u540E\uFF0C\u518D\u53BB\u5F02\u6B65\u66F4\u65B0\u89C6\u56FE!</p><h5 id="\u539F\u7406-2" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-2" aria-hidden="true">#</a> \u539F\u7406:</h5><p><img src="`+r+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\u4F1A\u5C06watcher\u653E\u5230\u4E00\u4E2A\u961F\u5217\u4E2D\u6279\u91CF\u66F4\u65B0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter">watcher<span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id <span class="token comment">// \u4F1A\u5BF9\u76F8\u540C\u7684watcher\u8FDB\u884C\u8FC7\u6EE4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
      <span class="token punctuation">}</span>
      queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// queue the flush</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      waiting <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528nextTick\u65B9\u6CD5 \u6279\u91CF\u7684\u8FDB\u884C\u66F4\u65B0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="_5-nexttick\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_5-nexttick\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 5.<code>nextTick</code>\u5B9E\u73B0\u539F\u7406?</h3><h4 id="\u7406\u89E3-\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1-\u5F02\u6B65\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1-\u5F02\u6B65\u65B9\u6CD5" aria-hidden="true">#</a> \u7406\u89E3:(<strong>\u5B8F\u4EFB\u52A1</strong>\u548C<strong>\u5FAE\u4EFB\u52A1</strong>) \u5F02\u6B65\u65B9\u6CD5</h4><p><code>nextTick</code>\u65B9\u6CD5\u4E3B\u8981\u662F\u4F7F\u7528\u4E86<strong>\u5B8F\u4EFB\u52A1</strong>\u548C<strong>\u5FAE\u4EFB\u52A1</strong>,\u5B9A\u4E49\u4E86\u4E00\u4E2A\u5F02\u6B65\u65B9\u6CD5.\u591A\u6B21\u8C03\u7528<code>nextTick</code> \u4F1A\u5C06\u65B9\u6CD5\u5B58\u5165\u961F\u5217\u4E2D\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5F02\u6B65\u65B9\u6CD5\u6E05\u7A7A\u5F53\u524D\u961F\u5217\u3002 \u6240\u4EE5\u8FD9\u4E2A<code>nextTick</code>\u65B9\u6CD5\u5C31\u662F\u5F02\u6B65\u65B9\u6CD5</p><h4 id="\u539F\u7406-3" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-3" aria-hidden="true">#</a> \u539F\u7406:</h4><p><img src="`+k+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> timerFunc<span class="token punctuation">;</span> <span class="token comment">// \u4F1A\u5B9A\u4E49\u4E00\u4E2A\u5F02\u6B65\u65B9\u6CD5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>Promise<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// promise</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS<span class="token punctuation">)</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>noop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
  <span class="token operator">!</span>isIE <span class="token operator">&amp;&amp;</span>
  <span class="token keyword">typeof</span> MutationObserver <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token comment">// MutationObserver</span>
  <span class="token punctuation">(</span><span class="token function">isNative</span><span class="token punctuation">(</span>MutationObserver<span class="token punctuation">)</span> <span class="token operator">||</span> MutationObserver<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object MutationObserverConstructor]&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>textNode<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    characterData<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    counter <span class="token operator">=</span> <span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">;</span>
    textNode<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> setImmediate <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// setImmediate</span>
  <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setImmediate</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// setTimeout</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// nextTick\u5B9E\u73B0</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token parameter">cb<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> ctx<span class="token operator">?</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> _resolve<span class="token punctuation">;</span>
  callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><h3 id="_6-vue\u4E2Dcomputed\u7684\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_6-vue\u4E2Dcomputed\u7684\u7279\u70B9" aria-hidden="true">#</a> 6.<code>Vue</code>\u4E2D<code>Computed</code>\u7684\u7279\u70B9</h3><h4 id="\u7406\u89E3-3" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-3" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>\u9ED8\u8BA4<code>computed</code>\u4E5F\u662F\u4E00\u4E2A<code>watcher</code>\u662F\u5177\u5907\u7F13\u5B58\u7684\uFF0C\u53EA\u8981\u5F53\u4F9D\u8D56\u7684\u5C5E\u6027\u53D1\u751F\u53D8\u5316\u65F6\u624D\u4F1A\u66F4\u65B0\u89C6\u56FE</li></ul><h4 id="\u539F\u7406-4" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-4" aria-hidden="true">#</a> \u539F\u7406:</h4><p><img src="`+b+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initComputed</span><span class="token punctuation">(</span><span class="token parameter">vm<span class="token operator">:</span> Component<span class="token punctuation">,</span> computed<span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// create internal watcher for the computed property.</span>
      watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> getter <span class="token operator">||</span> noop<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> computedWatcherOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// component-defined computed properties are already defined on the</span>
    <span class="token comment">// component prototype. We only need to define computed properties defined</span>
    <span class="token comment">// at instantiation here.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined in data.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined as a prop.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u4F9D\u8D56\u7684\u503C\u6CA1\u53D1\u751F\u53D8\u5316,\u5C31\u4E0D\u4F1A\u91CD\u65B0\u6C42\u503C</span>
        watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_7-watch\u4E2D\u7684deep-true-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" tabindex="-1"><a class="header-anchor" href="#_7-watch\u4E2D\u7684deep-true-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" aria-hidden="true">#</a> 7.<code>Watch</code>\u4E2D\u7684<code>deep:true</code> \u662F\u5982\u4F55\u5B9E\u73B0\u7684</h3><h4 id="\u7406\u89E3-4" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-4" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>\u5F53\u7528\u6237\u6307\u5B9A\u4E86<code>watch</code>\u4E2D\u7684 deep \u5C5E\u6027\u4E3A<code>true</code>\u65F6\uFF0C\u5982\u679C\u5F53\u524D\u76D1\u63A7\u7684\u503C\u662F\u6570\u7EC4\u7C7B\u578B\u3002\u4F1A\u5BF9\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u9879\u8FDB\u884C\u6C42\u503C\uFF0C\u6B64\u65F6\u4F1A\u5C06\u5F53\u524D<code>watcher</code>\u5B58\u5165\u5230\u5BF9\u5E94\u5C5E\u6027\u7684\u4F9D\u8D56\u4E2D\uFF0C\u8FD9\u6837\u6570\u7EC4\u4E2D\u5BF9\u8C61\u53D1\u751F\u53D8\u5316\u65F6\u4E5F\u4F1A\u901A\u77E5\u6570\u636E\u66F4\u65B0</li></ul><h2 id="\u539F\u7406-5" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-5" aria-hidden="true">#</a> \u539F\u7406:</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// \u5148\u5C06\u5F53\u524D\u4F9D\u8D56\u653E\u5230 Dep.target\u4E0A</span>
    <span class="token keyword">let</span> value
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getter for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u9700\u8981\u6DF1\u5EA6\u76D1\u63A7</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// \u4F1A\u5BF9\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u9879\u53D6\u503C,\u53D6\u503C\u65F6\u4F1A\u6267\u884C\u5BF9\u5E94\u7684get\u65B9\u6CD5</span>
      <span class="token punctuation">}</span>
      <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">_traverse</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> any<span class="token punctuation">,</span> seen<span class="token operator">:</span> SimpleSet</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> keys
  <span class="token keyword">const</span> isA <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>isA <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> Object<span class="token punctuation">.</span><span class="token function">isFrozen</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">||</span> val <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>__ob__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> depId <span class="token operator">=</span> val<span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span>dep<span class="token punctuation">.</span>id
    <span class="token keyword">if</span> <span class="token punctuation">(</span>seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i <span class="token operator">=</span> val<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="_8-vue\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#_8-vue\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> 8.<code>Vue</code>\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F</h3><h4 id="\u7406\u89E3-5" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-5" aria-hidden="true">#</a> \u7406\u89E3:</h4><h4 id="\u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u4EC0\u4E48\u65F6\u5019\u88AB\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u4EC0\u4E48\u65F6\u5019\u88AB\u8C03\u7528" aria-hidden="true">#</a> \u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u4EC0\u4E48\u65F6\u5019\u88AB\u8C03\u7528</h4><ul><li><code>beforeCreate</code> \u5728\u5B9E\u4F8B\u521D\u59CB\u5316\u4E4B\u540E\uFF0C\u6570\u636E\u89C2\u6D4B(data observer) \u4E4B\u524D\u88AB\u8C03\u7528\u3002</li><li><code>created</code> \u5B9E\u4F8B\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\u4E4B\u540E\u88AB\u8C03\u7528\u3002\u5728\u8FD9\u4E00\u6B65\uFF0C\u5B9E\u4F8B\u5DF2\u5B8C\u6210\u4EE5\u4E0B\u7684\u914D\u7F6E\uFF1A\u6570\u636E\u89C2\u6D4B(data observer)\uFF0C\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u8FD0\u7B97\uFF0C watch/event \u4E8B\u4EF6\u56DE\u8C03\u3002\u8FD9\u91CC\u6CA1\u6709$el</li><li><code>beforeMount</code> \u5728\u6302\u8F7D\u5F00\u59CB\u4E4B\u524D\u88AB\u8C03\u7528\uFF1A\u76F8\u5173\u7684 render \u51FD\u6570\u9996\u6B21\u88AB\u8C03\u7528\u3002</li><li><code>mounted</code> el \u88AB\u65B0\u521B\u5EFA\u7684 <code>vm.$el</code> \u66FF\u6362\uFF0C\u5E76\u6302\u8F7D\u5230\u5B9E\u4F8B\u4E0A\u53BB\u4E4B\u540E\u8C03\u7528\u8BE5\u94A9\u5B50\u3002</li><li><code>beforeUpdate</code> \u6570\u636E\u66F4\u65B0\u65F6\u8C03\u7528\uFF0C\u53D1\u751F\u5728\u865A\u62DF DOM \u91CD\u65B0\u6E32\u67D3\u548C\u6253\u8865\u4E01\u4E4B\u524D\u3002</li><li><code>updated</code> \u7531\u4E8E\u6570\u636E\u66F4\u6539\u5BFC\u81F4\u7684\u865A\u62DF DOM \u91CD\u65B0\u6E32\u67D3\u548C\u6253\u8865\u4E01\uFF0C\u5728\u8FD9\u4E4B\u540E\u4F1A\u8C03\u7528\u8BE5\u94A9\u5B50\u3002</li><li><code>beforeDestroy</code> \u5B9E\u4F8B\u9500\u6BC1\u4E4B\u524D\u8C03\u7528\u3002\u5728\u8FD9\u4E00\u6B65\uFF0C\u5B9E\u4F8B\u4ECD\u7136\u5B8C\u5168\u53EF\u7528\u3002</li><li><code>destroyed</code> <code>Vue</code> \u5B9E\u4F8B\u9500\u6BC1\u540E\u8C03\u7528\u3002\u8C03\u7528\u540E\uFF0C<code>Vue</code> \u5B9E\u4F8B\u6307\u793A\u7684\u6240\u6709\u4E1C\u897F\u90FD\u4F1A\u89E3\u7ED1\u5B9A\uFF0C\u6240\u6709\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u4F1A\u88AB\u79FB\u9664\uFF0C\u6240\u6709\u7684\u5B50\u5B9E\u4F8B\u4E5F\u4F1A\u88AB\u9500\u6BC1\u3002 \u8BE5\u94A9\u5B50\u5728\u670D\u52A1\u5668\u7AEF\u6E32\u67D3\u671F\u95F4\u4E0D\u88AB\u8C03\u7528\u3002</li></ul><h4 id="\u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u5185\u90E8\u53EF\u4EE5\u505A\u4EC0\u4E48\u4E8B" tabindex="-1"><a class="header-anchor" href="#\u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u5185\u90E8\u53EF\u4EE5\u505A\u4EC0\u4E48\u4E8B" aria-hidden="true">#</a> \u8981\u638C\u63E1\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u5185\u90E8\u53EF\u4EE5\u505A\u4EC0\u4E48\u4E8B</h4><ul><li><code>created</code> \u5B9E\u4F8B\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\uFF0C\u56E0\u4E3A\u5B83\u662F\u6700\u65E9\u89E6\u53D1\u7684\u539F\u56E0\u53EF\u4EE5\u8FDB\u884C\u4E00\u4E9B\u6570\u636E\uFF0C\u8D44\u6E90\u7684\u8BF7\u6C42\u3002</li><li><code>mounted</code> \u5B9E\u4F8B\u5DF2\u7ECF\u6302\u8F7D\u5B8C\u6210\uFF0C\u53EF\u4EE5\u8FDB\u884C\u4E00\u4E9B DOM \u64CD\u4F5C</li><li><code>beforeUpdate</code> \u53EF\u4EE5\u5728\u8FD9\u4E2A\u94A9\u5B50\u4E2D\u8FDB\u4E00\u6B65\u5730\u66F4\u6539\u72B6\u6001\uFF0C\u8FD9\u4E0D\u4F1A\u89E6\u53D1\u9644\u52A0\u7684\u91CD\u6E32\u67D3\u8FC7\u7A0B\u3002</li><li><code>updated</code> \u53EF\u4EE5\u6267\u884C\u4F9D\u8D56\u4E8E DOM \u7684\u64CD\u4F5C\u3002\u7136\u800C\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u4F60\u5E94\u8BE5\u907F\u514D\u5728\u6B64\u671F\u95F4\u66F4\u6539\u72B6\u6001\uFF0C\u56E0\u4E3A\u8FD9\u53EF\u80FD\u4F1A\u5BFC\u81F4\u66F4\u65B0\u65E0\u9650\u5FAA\u73AF\u3002 \u8BE5\u94A9\u5B50\u5728\u670D\u52A1\u5668\u7AEF\u6E32\u67D3\u671F\u95F4\u4E0D\u88AB\u8C03\u7528\u3002</li><li><code>destroyed</code> \u53EF\u4EE5\u6267\u884C\u4E00\u4E9B\u4F18\u5316\u64CD\u4F5C,\u6E05\u7A7A\u5B9A\u65F6\u5668\uFF0C\u89E3\u9664\u7ED1\u5B9A\u4E8B\u4EF6</li></ul><p><img src="`+m+'" alt=""></p><h4 id="\u539F\u7406-6" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-6" aria-hidden="true">#</a> \u539F\u7406:</h4><p><img src="'+d+`" alt=""></p><h3 id="_9-ajax\u8BF7\u6C42\u653E\u5728\u54EA\u4E2A\u751F\u547D\u5468\u671F\u4E2D" tabindex="-1"><a class="header-anchor" href="#_9-ajax\u8BF7\u6C42\u653E\u5728\u54EA\u4E2A\u751F\u547D\u5468\u671F\u4E2D" aria-hidden="true">#</a> 9.<code>ajax</code>\u8BF7\u6C42\u653E\u5728\u54EA\u4E2A\u751F\u547D\u5468\u671F\u4E2D</h3><h4 id="\u7406\u89E3-6" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-6" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>\u5728 created \u7684\u65F6\u5019\uFF0C\u89C6\u56FE\u4E2D\u7684<code>dom</code>\u5E76\u6CA1\u6709\u6E32\u67D3\u51FA\u6765\uFF0C\u6240\u4EE5\u6B64\u65F6\u5982\u679C\u76F4\u63A5\u53BB\u64CD<code>dom</code>\u8282\u70B9\uFF0C\u65E0\u6CD5\u627E\u5230\u76F8\u5173\u7684\u5143\u7D20</li><li>\u5728 mounted \u4E2D\uFF0C\u7531\u4E8E\u6B64\u65F6<code>dom</code>\u5DF2\u7ECF\u6E32\u67D3\u51FA\u6765\u4E86\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u64CD\u4F5C<code>dom</code>\u8282\u70B9</li></ul><p>\u4E00\u822C\u60C5\u51B5\u4E0B\u90FD\u653E\u5230<code>mounted</code>\u4E2D,\u4FDD\u8BC1\u903B\u8F91\u7684\u7EDF\u4E00\u6027,\u56E0\u4E3A\u751F\u547D\u5468\u671F\u662F\u540C\u6B65\u6267\u884C\u7684\uFF0C<code>ajax</code>\u662F\u5F02\u6B65\u6267\u884C\u7684</p><blockquote><p>\u670D\u52A1\u7AEF\u6E32\u67D3\u4E0D\u652F\u6301 mounted \u65B9\u6CD5\uFF0C\u6240\u4EE5\u5728\u670D\u52A1\u7AEF\u6E32\u67D3\u7684\u60C5\u51B5\u4E0B\u7EDF\u4E00\u653E\u5230 created \u4E2D</p></blockquote><h3 id="_10-\u4F55\u65F6\u9700\u8981\u4F7F\u7528beforedestroy" tabindex="-1"><a class="header-anchor" href="#_10-\u4F55\u65F6\u9700\u8981\u4F7F\u7528beforedestroy" aria-hidden="true">#</a> 10.\u4F55\u65F6\u9700\u8981\u4F7F\u7528<code>beforeDestroy</code></h3><h4 id="\u7406\u89E3-7" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-7" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>\u53EF\u80FD\u5728\u5F53\u524D\u9875\u9762\u4E2D\u4F7F\u7528\u4E86<code>$on</code>\u65B9\u6CD5\uFF0C\u90A3\u9700\u8981\u5728\u7EC4\u4EF6\u9500\u6BC1\u524D\u89E3\u7ED1\u3002</li><li>\u6E05\u9664\u81EA\u5DF1\u5B9A\u4E49\u7684\u5B9A\u65F6\u5668</li><li>\u89E3\u9664\u4E8B\u4EF6\u7684\u7ED1\u5B9A <code>scroll mousemove ....</code></li></ul><h3 id="_11-vue\u4E2D\u6A21\u677F\u7F16\u8BD1\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_11-vue\u4E2D\u6A21\u677F\u7F16\u8BD1\u539F\u7406" aria-hidden="true">#</a> 11.<code>Vue</code>\u4E2D\u6A21\u677F\u7F16\u8BD1\u539F\u7406</h3><ul><li>\u5C06<code>template</code>\u8F6C\u5316\u6210<code>render</code>\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseCompile</span> <span class="token punctuation">(</span>
  <span class="token parameter">template<span class="token operator">:</span> string<span class="token punctuation">,</span>
  options<span class="token operator">:</span> CompilerOptions</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token comment">// 1.\u5C06\u6A21\u677F\u8F6C\u5316\u6210ast\u8BED\u6CD5\u6811</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>optimize <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token comment">// 2.\u4F18\u5316\u6811</span>
    <span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>         <span class="token comment">// 3.\u751F\u6210\u6811</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    ast<span class="token punctuation">,</span>
    render<span class="token operator">:</span> code<span class="token punctuation">.</span>render<span class="token punctuation">,</span>
    staticRenderFns<span class="token operator">:</span> code<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ncname <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> qnameCapture <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">((?:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ncname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\\\:)?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ncname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> startTagOpen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^&lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>qnameCapture<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6807\u7B7E\u5F00\u5934\u7684\u6B63\u5219 \u6355\u83B7\u7684\u5185\u5BB9\u662F\u6807\u7B7E\u540D</span>
<span class="token keyword">const</span> endTag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^&lt;\\\\/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>qnameCapture<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[^&gt;]*&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5339\u914D\u6807\u7B7E\u7ED3\u5C3E\u7684  &lt;/div&gt;</span>
<span class="token keyword">const</span> attribute <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*([^\\s&quot;&#39;&lt;&gt;\\/=]+)(?:\\s*(=)\\s*(?:&quot;([^&quot;]*)&quot;+|&#39;([^&#39;]*)&#39;+|([^\\s&quot;&#39;=&lt;&gt;\`]+)))?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u5339\u914D\u5C5E\u6027\u7684</span>
<span class="token keyword">const</span> startTagClose <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*(\\/?)&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">// \u5339\u914D\u6807\u7B7E\u7ED3\u675F\u7684  &gt;</span>
<span class="token keyword">let</span> root<span class="token punctuation">;</span>
<span class="token keyword">let</span> currentParent<span class="token punctuation">;</span>
<span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">createASTElement</span><span class="token punctuation">(</span><span class="token parameter">tagName<span class="token punctuation">,</span> attrs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    tag<span class="token operator">:</span> tagName<span class="token punctuation">,</span>
    type<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    attrs<span class="token punctuation">,</span>
    parent<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">tagName<span class="token punctuation">,</span> attrs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> element <span class="token operator">=</span> <span class="token function">createASTElement</span><span class="token punctuation">(</span>tagName<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> element<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  currentParent <span class="token operator">=</span> element<span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">chars</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    text<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">tagName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
  currentParent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentParent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    element<span class="token punctuation">.</span>parent <span class="token operator">=</span> currentParent<span class="token punctuation">;</span>
    currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>html<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> textEnd <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>textEnd <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> startTagMatch <span class="token operator">=</span> <span class="token function">parseStartTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>startTagMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">start</span><span class="token punctuation">(</span>startTagMatch<span class="token punctuation">.</span>tagName<span class="token punctuation">,</span> startTagMatch<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> endTagMatch <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>endTag<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>endTagMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">advance</span><span class="token punctuation">(</span>endTagMatch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">end</span><span class="token punctuation">(</span>endTagMatch<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> text<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>textEnd <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      text <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> textEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">advance</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">chars</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">advance</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">parseStartTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> start <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>startTagOpen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token punctuation">{</span>
        tagName<span class="token operator">:</span> start<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        attrs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">advance</span><span class="token punctuation">(</span>start<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> attr<span class="token punctuation">,</span> end<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>end <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>startTagClose<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>attr <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>attribute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">advance</span><span class="token punctuation">(</span>attr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        match<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> attr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token operator">:</span> attr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">advance</span><span class="token punctuation">(</span>end<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> match<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u751F\u6210\u8BED\u6CD5\u6811</span>
<span class="token function">parseHTML</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div id=&quot;container&quot;&gt;&lt;p&gt;hello&lt;span&gt;zf&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">generate</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_v(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">genChildren</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> el<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">gen</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">genProps</span><span class="token punctuation">(</span><span class="token parameter">attrs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> attrs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> attr <span class="token operator">=</span> attrs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    str <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attr<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attr<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{attrs:{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_c(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genProps</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> code<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6839\u636E\u8BED\u6CD5\u6811\u751F\u6210\u65B0\u7684\u4EE3\u7801</span>
<span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> render <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">with(this){return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">// \u5305\u88C5\u6210\u51FD\u6570</span>
<span class="token keyword">let</span> renderFn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>renderFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br></div></div><h3 id="_12-vue\u4E2Dv-if\u548Cv-show\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_12-vue\u4E2Dv-if\u548Cv-show\u7684\u533A\u522B" aria-hidden="true">#</a> 12.<code>Vue</code>\u4E2D<code>v-if</code>\u548C<code>v-show</code>\u7684\u533A\u522B</h3><h4 id="\u7406\u89E3-8" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-8" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li><code>v-if</code>\u5982\u679C\u6761\u4EF6\u4E0D\u6210\u7ACB\u4E0D\u4F1A\u6E32\u67D3\u5F53\u524D\u6307\u4EE4\u6240\u5728\u8282\u70B9\u7684<code>dom</code>\u5143\u7D20</li><li><code>v-show</code>\u53EA\u662F\u5207\u6362\u5F53\u524D<code>dom</code>\u7684\u663E\u793A\u6216\u8005\u9690\u85CF</li></ul><h4 id="\u539F\u7406-7" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-7" aria-hidden="true">#</a> \u539F\u7406:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r1 <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div v-if=&quot;true&quot;&gt;&lt;span v-for=&quot;i in 3&quot;&gt;hello&lt;/span&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return (true) ? _c(&#39;div&#39;, _l((3), function (i) <span class="token punctuation">{</span>
        return _c(&#39;span&#39;, [_v(&quot;hello&quot;)])
    <span class="token punctuation">}</span>), 0) : _e()
<span class="token punctuation">}</span>
*/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r2 <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div v-show=&quot;true&quot;&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return _c(&#39;div&#39;, <span class="token punctuation">{</span>
        directives: [<span class="token punctuation">{</span>
            name: &quot;show&quot;,
            rawName: &quot;v-show&quot;,
            value: (true),
            expression: &quot;true&quot;
        <span class="token punctuation">}</span>]
    <span class="token punctuation">}</span>)
<span class="token punctuation">}</span>
 */</span>

<span class="token comment">// v-show \u64CD\u4F5C\u7684\u662F\u6837\u5F0F  \u5B9A\u4E49\u5728platforms/web/runtime/directives/show.js</span>
<span class="token function">bind</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token operator">:</span> VNodeDirective<span class="token punctuation">,</span> vnode<span class="token operator">:</span> VNodeWithData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode <span class="token operator">=</span> <span class="token function">locateNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token keyword">const</span> transition <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>transition
    <span class="token keyword">const</span> originalDisplay <span class="token operator">=</span> el<span class="token punctuation">.</span>__vOriginalDisplay <span class="token operator">=</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">===</span> <span class="token string">&#39;none&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> transition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">enter</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> originalDisplay
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> value <span class="token operator">?</span> originalDisplay <span class="token operator">:</span> <span class="token string">&#39;none&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="_13-\u4E3A\u4EC0\u4E48v-for\u548Cv-if\u4E0D\u80FD\u8FDE\u7528" tabindex="-1"><a class="header-anchor" href="#_13-\u4E3A\u4EC0\u4E48v-for\u548Cv-if\u4E0D\u80FD\u8FDE\u7528" aria-hidden="true">#</a> 13.\u4E3A\u4EC0\u4E48<code>V-for</code>\u548C<code>v-if</code>\u4E0D\u80FD\u8FDE\u7528</h3><h4 id="\u7406\u89E3-9" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-9" aria-hidden="true">#</a> \u7406\u89E3:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r1 <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div v-if=&quot;false&quot; v-for=&quot;i in 3&quot;&gt;hello&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return _l((3), function (i) <span class="token punctuation">{</span>
        return (false) ? _c(&#39;div&#39;, [_v(&quot;hello&quot;)]) : _e()
    <span class="token punctuation">}</span>)
<span class="token punctuation">}</span>
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">.</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><code>v-for</code>\u4F1A\u6BD4<code>v-if</code>\u7684\u4F18\u5148\u7EA7\u9AD8\u4E00\u4E9B,\u5982\u679C\u8FDE\u7528\u7684\u8BDD\u4F1A\u628A<code>v-if</code>\u7ED9\u6BCF\u4E2A\u5143\u7D20\u90FD\u6DFB\u52A0\u4E00\u4E0B,\u4F1A\u9020\u6210\u6027\u80FD\u95EE\u9898</li></ul><h3 id="_14-\u7528vnode\u6765\u63CF\u8FF0\u4E00\u4E2Adom\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_14-\u7528vnode\u6765\u63CF\u8FF0\u4E00\u4E2Adom\u7ED3\u6784" aria-hidden="true">#</a> 14.\u7528<code>vnode</code>\u6765\u63CF\u8FF0\u4E00\u4E2A<code>DOM</code>\u7ED3\u6784</h3><ul><li>\u865A\u62DF\u8282\u70B9\u5C31\u662F\u7528\u4E00\u4E2A\u5BF9\u8C61\u6765\u63CF\u8FF0\u771F\u5B9E\u7684<code>dom</code>\u5143\u7D20</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">$createElement</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token operator">...</span>children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> data<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> data<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
  children <span class="token operator">=</span> children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> child <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> child<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> props<span class="token punctuation">,</span> key<span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">vnode</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    tag<span class="token punctuation">,</span> <span class="token comment">// \u8868\u793A\u7684\u662F\u5F53\u524D\u7684\u6807\u7B7E\u540D</span>
    data<span class="token punctuation">,</span> <span class="token comment">// \u8868\u793A\u7684\u662F\u5F53\u524D\u6807\u7B7E\u4E0A\u7684\u5C5E\u6027</span>
    key<span class="token punctuation">,</span> <span class="token comment">// \u552F\u4E00\u8868\u793A\u7528\u6237\u53EF\u80FD\u4F20\u9012</span>
    children<span class="token punctuation">,</span>
    text<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_15-diff\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#_15-diff\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> 15.<code>diff</code>\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6</h3><p>\u4E24\u4E2A\u6811\u7684\u5B8C\u5168\u7684<code>diff</code>\u7B97\u6CD5\u662F\u4E00\u4E2A\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A <code>O(n3) </code>,<code>Vue</code>\u8FDB\u884C\u4E86\u4F18\u5316\xB7<em>O(n3)</em> <em>\u590D\u6742\u5EA6</em>\u7684\u95EE\u9898\u8F6C\u6362\u6210 O(n) <em>\u590D\u6742\u5EA6</em>\u7684\u95EE\u9898(\u53EA\u6BD4\u8F83\u540C\u7EA7\u4E0D\u8003\u8651\u8DE8\u7EA7\u95EE\u9898) \u5728\u524D\u7AEF\u5F53\u4E2D\uFF0C \u4F60\u5F88\u5C11\u4F1A\u8DE8\u8D8A\u5C42\u7EA7\u5730\u79FB\u52A8 Dom \u5143\u7D20\u3002 \u6240\u4EE5 Virtual Dom \u53EA\u4F1A\u5BF9\u540C\u4E00\u4E2A\u5C42\u7EA7\u7684\u5143\u7D20\u8FDB\u884C\u5BF9\u6BD4\u3002</p><h3 id="_16-\u7B80\u8FF0vue\u4E2Ddiff\u7B97\u6CD5\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_16-\u7B80\u8FF0vue\u4E2Ddiff\u7B97\u6CD5\u539F\u7406" aria-hidden="true">#</a> 16.\u7B80\u8FF0<code>Vue</code>\u4E2D<code>diff</code>\u7B97\u6CD5\u539F\u7406</h3><h4 id="\u7406\u89E3-10" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-10" aria-hidden="true">#</a> \u7406\u89E3\uFF1A</h4><ul><li>1.\u5148\u540C\u7EA7\u6BD4\u8F83\uFF0C\u5728\u6BD4\u8F83\u5B50\u8282\u70B9</li><li>2.\u5148\u5224\u65AD\u4E00\u65B9\u6709\u513F\u5B50\u4E00\u65B9\u6CA1\u513F\u5B50\u7684\u60C5\u51B5</li><li>3.\u6BD4\u8F83\u90FD\u6709\u513F\u5B50\u7684\u60C5\u51B5</li><li>4.\u9012\u5F52\u6BD4\u8F83\u5B50\u8282\u70B9</li></ul><p><img src="`+h+`" alt=""></p><h4 id="\u539F\u7406-8" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-8" aria-hidden="true">#</a> \u539F\u7406:</h4><blockquote><p><code>core/vdom/patch.js</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span> <span class="token comment">// \u8001\u7684\u513F\u5B50</span>
<span class="token keyword">const</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span> <span class="token comment">// \u65B0\u7684\u513F\u5B50</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BD4\u8F83\u5B69\u5B50</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u7684\u513F\u5B50\u6709 \u8001\u7684\u6CA1\u6709</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u8001\u7684\u6709\u65B0\u7684\u6CA1\u6709 \u5C31\u5220\u9664</span>
    <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8001\u7684\u6709\u6587\u672C \u65B0\u7684\u6CA1\u6587\u672C</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u8001\u7684\u6E05\u7A7A</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6587\u672C\u4E0D\u76F8\u540C\u66FF\u6362</span>
  nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">,</span> refElm<span class="token punctuation">;</span>

  <span class="token comment">// removeOnly is a special flag used only by &lt;transition-group&gt;</span>
  <span class="token comment">// to ensure removed elements stay in correct relative positions</span>
  <span class="token comment">// during leaving transitions</span>
  <span class="token keyword">const</span> canMove <span class="token operator">=</span> <span class="token operator">!</span>removeOnly<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkDuplicateKeys</span><span class="token punctuation">(</span>newCh<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Vnode has been moved left</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Vnode moved right</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Vnode moved left</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldKeyToIdx<span class="token punctuation">)</span><span class="token punctuation">)</span> oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      idxInOld <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token function">findIdxInOld</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>idxInOld<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// New element</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        vnodeToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
          canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// same key but different element. treat as new element</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    refElm <span class="token operator">=</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
    <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><h3 id="_17-v-for\u4E2D\u4E3A\u4EC0\u4E48\u8981\u7528key-\u56FE\u89E3" tabindex="-1"><a class="header-anchor" href="#_17-v-for\u4E2D\u4E3A\u4EC0\u4E48\u8981\u7528key-\u56FE\u89E3" aria-hidden="true">#</a> 17.<code>v-for</code>\u4E2D\u4E3A\u4EC0\u4E48\u8981\u7528<code>key</code> (\u56FE\u89E3)</h3><p><img src="`+g+'" alt=""></p><h3 id="_18-\u63CF\u8FF0\u7EC4\u4EF6\u6E32\u67D3\u548C\u66F4\u65B0\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#_18-\u63CF\u8FF0\u7EC4\u4EF6\u6E32\u67D3\u548C\u66F4\u65B0\u8FC7\u7A0B" aria-hidden="true">#</a> 18.\u63CF\u8FF0\u7EC4\u4EF6\u6E32\u67D3\u548C\u66F4\u65B0\u8FC7\u7A0B</h3><h4 id="\u7406\u89E3-11" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-11" aria-hidden="true">#</a> \u7406\u89E3\uFF1A</h4><ul><li>\u6E32\u67D3\u7EC4\u4EF6\u65F6\uFF0C\u4F1A\u901A\u8FC7<code>Vue.extend</code>\u65B9\u6CD5\u6784\u5EFA\u5B50\u7EC4\u4EF6\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002\u6700\u7EC8\u624B\u52A8\u8C03\u7528<code>$mount()</code>\u8FDB\u884C\u6302\u8F7D\u3002\u66F4\u65B0\u7EC4\u4EF6\u65F6\u4F1A\u8FDB\u884C<code>patchVnode</code>\u6D41\u7A0B.\u6838\u5FC3\u5C31\u662F diff \u7B97\u6CD5</li></ul><p><img src="'+f+`" alt=""></p><h3 id="_19-\u7EC4\u4EF6\u4E2D\u7684-data\u4E3A\u4EC0\u4E48\u662F\u4E00\u4E2A\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_19-\u7EC4\u4EF6\u4E2D\u7684-data\u4E3A\u4EC0\u4E48\u662F\u4E00\u4E2A\u51FD\u6570" aria-hidden="true">#</a> 19.\u7EC4\u4EF6\u4E2D\u7684 <code>data</code>\u4E3A\u4EC0\u4E48\u662F\u4E00\u4E2A\u51FD\u6570?</h3><h4 id="\u7406\u89E3-12" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-12" aria-hidden="true">#</a> \u7406\u89E3\uFF1A</h4><p>\u540C\u4E00\u4E2A\u7EC4\u4EF6\u88AB\u590D\u7528\u591A\u6B21\uFF0C\u4F1A\u521B\u5EFA\u591A\u4E2A\u5B9E\u4F8B\u3002\u8FD9\u4E9B\u5B9E\u4F8B\u7528\u7684\u662F\u540C\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u5982\u679C<code>data</code>\u662F\u4E00\u4E2A\u5BF9\u8C61\u7684\u8BDD\u3002\u90A3\u4E48\u6240\u6709\u7EC4\u4EF6\u90FD\u5171\u4EAB\u4E86\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002\u4E3A\u4E86\u4FDD\u8BC1\u7EC4\u4EF6\u7684\u6570\u636E\u72EC\u7ACB\u6027\u8981\u6C42\u6BCF\u4E2A\u7EC4\u4EF6\u5FC5\u987B\u901A\u8FC7<code>data</code>\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u4F5C\u4E3A\u7EC4\u4EF6\u7684\u72B6\u6001\u3002</p><h4 id="\u539F\u7406-9" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-9" aria-hidden="true">#</a> \u539F\u7406:</h4><blockquote><p><code>core/global-api/extend.js line:33</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Sub<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>Super<span class="token punctuation">.</span>options<span class="token punctuation">,</span> extendOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">mergeField</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> strat <span class="token operator">=</span> strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> defaultStrat<span class="token punctuation">;</span>
    options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strat</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> child<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
strats<span class="token punctuation">.</span><span class="token function-variable function">data</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">parentVal<span class="token operator">:</span> any<span class="token punctuation">,</span> childVal<span class="token operator">:</span> any<span class="token punctuation">,</span> vm<span class="token operator">?</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">?</span>Function <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5408\u5E76\u662F\u4F1A\u5224\u65AD\u5B50\u7C7B\u7684data\u5FC5\u987B\u662F\u4E00\u4E2A\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>childVal <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> childVal <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;The &quot;data&quot; option should be a function &#39;</span> <span class="token operator">+</span> <span class="token string">&#39;that returns a per-instance value in component &#39;</span> <span class="token operator">+</span> <span class="token string">&#39;definitions.&#39;</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> parentVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">mergeDataOrFn</span><span class="token punctuation">(</span>parentVal<span class="token punctuation">,</span> childVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">mergeDataOrFn</span><span class="token punctuation">(</span>parentVal<span class="token punctuation">,</span> childVal<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li>\u4E00\u4E2A\u7EC4\u4EF6\u88AB\u4F7F\u7528\u591A\u6B21\uFF0C\u7528\u7684\u90FD\u662F\u540C\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u3002\u4E3A\u4E86\u4FDD\u8BC1\u7EC4\u4EF6\u7684\u4E0D\u540C\u7684\u5B9E\u4F8B data \u4E0D\u51B2\u7A81\uFF0C\u8981\u6C42 data \u5FC5\u987B\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u8FD9\u6837\u7EC4\u4EF6\u95F4\u4E0D\u4F1A\u76F8\u4E92\u5F71\u54CD</li></ul><h3 id="_20-vue\u4E2D\u4E8B\u4EF6\u7ED1\u5B9A\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_20-vue\u4E2D\u4E8B\u4EF6\u7ED1\u5B9A\u7684\u539F\u7406" aria-hidden="true">#</a> 20.<code>Vue</code>\u4E2D\u4E8B\u4EF6\u7ED1\u5B9A\u7684\u539F\u7406</h3><h4 id="\u7406\u89E3-13" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-13" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>1.\u539F\u751F<code>dom</code>\u4E8B\u4EF6\u7684\u7ED1\u5B9A,\u91C7\u7528\u7684\u662F<code>addEventListener</code>\u5B9E\u73B0</li><li>2.\u7EC4\u4EF6\u7ED1\u5B9A\u4E8B\u4EF6\u91C7\u7528\u7684\u662F<code>$on</code>\u65B9\u6CD5</li></ul><h4 id="\u539F\u7406-10" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-10" aria-hidden="true">#</a> \u539F\u7406:</h4><ul><li>\u4E8B\u4EF6\u7684\u7F16\u8BD1\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> compiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r1 <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;div @click=&quot;fn()&quot;&gt;&lt;/div&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r2 <span class="token operator">=</span> compiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;my-component @click.native=&quot;fn&quot; @click=&quot;fn1&quot;&gt;&lt;/my-component&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {on:{click}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {nativeOnOn:{click},on:{click}}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+v+`" alt=""></p><h4 id="_1-\u539F\u751Fdom\u7684\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#_1-\u539F\u751Fdom\u7684\u7ED1\u5B9A" aria-hidden="true">#</a> 1.\u539F\u751F<code>dom</code>\u7684\u7ED1\u5B9A</h4><ul><li><code>Vue</code>\u5728\u521B\u5EFA\u771F\u5B9E dom<code>\u65F6\u4F1A\u8C03\u7528</code>createElm<code>,\u9ED8\u8BA4\u4F1A\u8C03\u7528</code>invokeCreateHooks\`</li><li>\u4F1A\u904D\u5386\u5F53\u524D\u5E73\u53F0\u4E0B\u76F8\u5BF9\u7684\u5C5E\u6027\u5904\u7406\u4EE3\u7801,\u5176\u4E2D\u5C31\u6709<code>updateDOMListeners</code>\u65B9\u6CD5,\u5185\u90E8\u4F1A\u4F20\u5165<code>add</code>\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateDOMListeners</span><span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token operator">:</span> VNodeWithData<span class="token punctuation">,</span> vnode<span class="token operator">:</span> VNodeWithData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> on <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> oldOn <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  target <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
  <span class="token function">normalizeEvents</span><span class="token punctuation">(</span>on<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">updateListeners</span><span class="token punctuation">(</span>on<span class="token punctuation">,</span> oldOn<span class="token punctuation">,</span> add<span class="token punctuation">,</span> remove<span class="token punctuation">,</span> createOnceHandler<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  target <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token operator">:</span> string<span class="token punctuation">,</span> handler<span class="token operator">:</span> Function<span class="token punctuation">,</span> capture<span class="token operator">:</span> boolean<span class="token punctuation">,</span> passive<span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
    <span class="token comment">// \u7ED9\u5F53\u524D\u7684dom\u6DFB\u52A0\u4E8B\u4EF6</span>
    name<span class="token punctuation">,</span>
    handler<span class="token punctuation">,</span>
    supportsPassive <span class="token operator">?</span> <span class="token punctuation">{</span> capture<span class="token punctuation">,</span> passive <span class="token punctuation">}</span> <span class="token operator">:</span> capture
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p><code>vue</code>\u4E2D\u7ED1\u5B9A\u4E8B\u4EF6\u662F\u76F4\u63A5\u7ED1\u5B9A\u7ED9\u771F\u5B9E<code>dom</code>\u5143\u7D20\u7684</p></blockquote><ul><li>2.\u7EC4\u4EF6\u4E2D\u7ED1\u5B9A\u4E8B\u4EF6</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateComponentListeners</span><span class="token punctuation">(</span><span class="token parameter">vm<span class="token operator">:</span> Component<span class="token punctuation">,</span> listeners<span class="token operator">:</span> Object<span class="token punctuation">,</span> oldListeners<span class="token operator">:</span> <span class="token operator">?</span>Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target <span class="token operator">=</span> vm<span class="token punctuation">;</span>
  <span class="token function">updateListeners</span><span class="token punctuation">(</span>listeners<span class="token punctuation">,</span> oldListeners <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> add<span class="token punctuation">,</span> remove<span class="token punctuation">,</span> createOnceHandler<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  target <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u7EC4\u4EF6\u7ED1\u5B9A\u4E8B\u4EF6\u662F\u901A\u8FC7<code>vue</code>\u4E2D\u81EA\u5B9A\u4E49\u7684<code>$on</code>\u65B9\u6CD5\u6765\u5B9E\u73B0\u7684</p></blockquote><h3 id="_21-v-model\u4E2D\u7684\u5B9E\u73B0\u539F\u7406\u53CA\u5982\u4F55\u81EA\u5B9A\u4E49v-model" tabindex="-1"><a class="header-anchor" href="#_21-v-model\u4E2D\u7684\u5B9E\u73B0\u539F\u7406\u53CA\u5982\u4F55\u81EA\u5B9A\u4E49v-model" aria-hidden="true">#</a> 21.<code>v-model</code>\u4E2D\u7684\u5B9E\u73B0\u539F\u7406\u53CA\u5982\u4F55\u81EA\u5B9A\u4E49<code>v-model</code></h3><h4 id="\u7406\u89E3-14" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-14" aria-hidden="true">#</a> \u7406\u89E3:</h4><p>\u7EC4\u4EF6\u7684<code>v-model</code>\u662F<code>value+input\u65B9\u6CD5</code>\u7684\u8BED\u6CD5\u7CD6</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-checkbox</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-checkbox</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>check<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-checkbox</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53EF\u4EE5\u81EA\u5DF1\u91CD\u65B0\u5B9A\u4E49<code>v-model</code>\u7684\u542B\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;el-checkbox&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;input type=&quot;checkbox&quot; :checked=&quot;check&quot; @change=&quot;$emit(&#39;change&#39;,$event.target.checked)&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  model<span class="token operator">:</span> <span class="token punctuation">{</span>
    prop<span class="token operator">:</span> <span class="token string">&#39;check&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u66F4\u6539\u9ED8\u8BA4\u7684value\u7684\u540D\u5B57</span>
    event<span class="token operator">:</span> <span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u66F4\u6539\u9ED8\u8BA4\u7684\u65B9\u6CD5\u540D</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  props<span class="token operator">:</span> <span class="token punctuation">{</span>
    check<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="\u539F\u7406-11" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-11" aria-hidden="true">#</a> \u539F\u7406:</h4><ul><li>\u4F1A\u5C06\u7EC4\u4EF6\u7684<code>v-model</code>\u9ED8\u8BA4\u8F6C\u5316\u6210 value+input</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ele <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;el-checkbox v-model=&quot;check&quot;&gt;&lt;/el-checkbox&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// with(this) {</span>
<span class="token comment">//     return _c(&#39;el-checkbox&#39;, {</span>
<span class="token comment">//         model: {</span>
<span class="token comment">//             value: (check),</span>
<span class="token comment">//             callback: function ($$v) {</span>
<span class="token comment">//                 check = $$v</span>
<span class="token comment">//             },</span>
<span class="token comment">//             expression: &quot;check&quot;</span>
<span class="token comment">//         }</span>
<span class="token comment">//     })</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p><code>core/vdom/create-component.js line:155</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">transformModel</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> data<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prop <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>model <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>model<span class="token punctuation">.</span>prop<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>model <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>model<span class="token punctuation">.</span>event<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>data<span class="token punctuation">.</span>attrs <span class="token operator">||</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>model<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token keyword">const</span> on <span class="token operator">=</span> data<span class="token punctuation">.</span>on <span class="token operator">||</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>on <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> existing <span class="token operator">=</span> on<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> callback <span class="token operator">=</span> data<span class="token punctuation">.</span>model<span class="token punctuation">.</span>callback<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>existing<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>existing<span class="token punctuation">)</span> <span class="token operator">?</span> existing<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> existing <span class="token operator">!==</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      on<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>existing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    on<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>\u539F\u751F\u7684 <code>v-model</code>\uFF0C\u4F1A\u6839\u636E\u6807\u7B7E\u7684\u4E0D\u540C\u751F\u6210\u4E0D\u540C\u7684\u4E8B\u4EF6\u548C\u5C5E\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ele <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;input v-model=&quot;value&quot;/&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/** 
with(this) <span class="token punctuation">{</span>
    return _c(&#39;input&#39;, <span class="token punctuation">{</span>
        directives: [<span class="token punctuation">{</span>
            name: &quot;model&quot;,
            rawName: &quot;v-model&quot;,
            value: (value),
            expression: &quot;value&quot;
        <span class="token punctuation">}</span>],
        domProps: <span class="token punctuation">{</span>
            &quot;value&quot;: (value)
        <span class="token punctuation">}</span>,
        on: <span class="token punctuation">{</span>
            &quot;input&quot;: function ($event) <span class="token punctuation">{</span>
                if ($event.target.composing) return;
                value = $event.target.value
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>)
<span class="token punctuation">}</span>
*/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p>\u7F16\u8BD1\u65F6\uFF1A\u4E0D\u540C\u7684\u6807\u7B7E\u89E3\u6790\u51FA\u7684\u5185\u5BB9\u4E0D\u4E00\u6837 <code>platforms/web/compiler/directives/model.js</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>component<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genComponentModel</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// component v-model doesn&#39;t need extra runtime</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genSelect</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">&#39;input&#39;</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">===</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genCheckboxModel</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">&#39;input&#39;</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">===</span> <span class="token string">&#39;radio&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genRadioModel</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">&#39;input&#39;</span> <span class="token operator">||</span> tag <span class="token operator">===</span> <span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genDefaultModel</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span><span class="token function">isReservedTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">genComponentModel</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// component v-model doesn&#39;t need extra runtime</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>\u8FD0\u884C\u65F6\uFF1A\u4F1A\u5BF9\u5143\u7D20\u5904\u7406\u4E00\u4E9B\u5173\u4E8E\u8F93\u5165\u6CD5\u7684\u95EE\u9898 <code>platforms/web/runtime/directives/model.js</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">inserted</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> oldVnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// #6903</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>elm <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>_vOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mergeVNodeHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> <span class="token string">&#39;postpatch&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          directive<span class="token punctuation">.</span><span class="token function">componentUpdated</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">setSelected</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>context<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      el<span class="token punctuation">.</span>_vOptions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>options<span class="token punctuation">,</span> getValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;textarea&#39;</span> <span class="token operator">||</span> <span class="token function">isTextInputType</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>_vModifiers <span class="token operator">=</span> binding<span class="token punctuation">.</span>modifiers
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>binding<span class="token punctuation">.</span>modifiers<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;compositionstart&#39;</span><span class="token punctuation">,</span> onCompositionStart<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;compositionend&#39;</span><span class="token punctuation">,</span> onCompositionEnd<span class="token punctuation">)</span>
        <span class="token comment">// Safari &lt; 10.2 &amp; UIWebView doesn&#39;t fire compositionend when</span>
        <span class="token comment">// switching focus before confirming composition choice</span>
        <span class="token comment">// this also fixes the issue where some browsers e.g. iOS Chrome</span>
        <span class="token comment">// fires &quot;change&quot; instead of &quot;input&quot; on autocomplete.</span>
        el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> onCompositionEnd<span class="token punctuation">)</span>
        <span class="token comment">/* istanbul ignore if */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isIE9<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          el<span class="token punctuation">.</span>vmodel <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_22-vue\u4E2Dv-html\u4F1A\u5BFC\u81F4\u54EA\u4E9B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_22-vue\u4E2Dv-html\u4F1A\u5BFC\u81F4\u54EA\u4E9B\u95EE\u9898" aria-hidden="true">#</a> 22.<code>Vue</code>\u4E2D<code>v-html</code>\u4F1A\u5BFC\u81F4\u54EA\u4E9B\u95EE\u9898?</h3><h4 id="\u7406\u89E3-15" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-15" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li>\u53EF\u80FD\u4F1A\u5BFC\u81F4<code>xss</code>\u653B\u51FB</li><li><code>v-html</code>\u4F1A\u66FF\u6362\u6389\u6807\u7B7E\u5185\u90E8\u7684\u5B50\u5143\u7D20</li></ul><h4 id="\u539F\u7406-12" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-12" aria-hidden="true">#</a> \u539F\u7406:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div v-html=&quot;&#39;&lt;span&gt;hello&lt;/span&gt;&#39;&quot;&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// with(this){return _c(&#39;div&#39;,{domProps:{&quot;innerHTML&quot;:_s(&#39;&lt;span&gt;hello&lt;/span&gt;&#39;)}})}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// _c \u5B9A\u4E49\u5728core/instance/render.js</span>
<span class="token comment">// _s \u5B9A\u4E49\u5728core/instance/render-helpers/index,js</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;textContent&#39;</span> <span class="token operator">||</span> key <span class="token operator">===</span> <span class="token string">&#39;innerHTML&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>children<span class="token punctuation">)</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token operator">===</span> oldProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
      <span class="token comment">// #6601 work around Chrome version &lt;= 55 bug where single textNode</span>
      <span class="token comment">// replaced by innerHTML/textContent retains its parentNode property</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>elm<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        elm<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>elm<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_23-vue\u7236\u5B50\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#_23-vue\u7236\u5B50\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F" aria-hidden="true">#</a> 23. <code>Vue</code>\u7236\u5B50\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u8C03\u7528\u987A\u5E8F</h3><h4 id="\u7406\u89E3-16" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-16" aria-hidden="true">#</a> \u7406\u89E3:</h4><p>\u7EC4\u4EF6\u7684\u8C03\u7528\u987A\u5E8F\u90FD\u662F\u5148\u7236\u540E\u5B50,\u6E32\u67D3\u5B8C\u6210\u7684\u987A\u5E8F\u80AF\u5B9A\u662F\u5148\u5B50\u540E\u7236</p><p>\u7EC4\u4EF6\u7684\u9500\u6BC1\u64CD\u4F5C\u662F\u5148\u7236\u540E\u5B50\uFF0C\u9500\u6BC1\u5B8C\u6210\u7684\u987A\u5E8F\u662F\u5148\u5B50\u540E\u7236</p><h4 id="\u539F\u7406-13" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-13" aria-hidden="true">#</a> \u539F\u7406:</h4><p><img src="`+y+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> isInitialPatch <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">const</span> insertedVnodeQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5B9A\u4E49\u6536\u96C6\u6240\u6709\u7EC4\u4EF6\u7684insert hook\u65B9\u6CD5\u7684\u6570\u7EC4</span>
    <span class="token comment">// somthing ...</span>
    <span class="token function">createElm</span><span class="token punctuation">(</span>
        vnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        oldElm<span class="token punctuation">.</span>_leaveCb <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> parentElm<span class="token punctuation">,</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
	<span class="token comment">// somthing...</span>
    <span class="token comment">// \u6700\u7EC8\u4F1A\u4F9D\u6B21\u8C03\u7528\u6536\u96C6\u7684insert hook</span>
    <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> isInitialPatch<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>elm
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createElm</span> <span class="token punctuation">(</span>
    <span class="token parameter">vnode<span class="token punctuation">,</span>
    insertedVnodeQueue<span class="token punctuation">,</span>
    parentElm<span class="token punctuation">,</span>
    refElm<span class="token punctuation">,</span>
    nested<span class="token punctuation">,</span>
    ownerArray<span class="token punctuation">,</span>
    index</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// createChildren\u4F1A\u9012\u5F52\u521B\u5EFA\u513F\u5B50\u7EC4\u4EF6</span>
        <span class="token function">createChildren</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> children<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
        <span class="token comment">// something...</span>
  <span class="token punctuation">}</span>

<span class="token comment">// \u5C06\u7EC4\u4EF6\u7684vnode\u63D2\u5165\u5230\u6570\u7EC4\u4E2D</span>
<span class="token keyword">function</span> <span class="token function">invokeCreateHooks</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> insertedVnodeQueue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>create<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cbs<span class="token punctuation">.</span>create<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    i <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook <span class="token comment">// Reuse variable</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>create<span class="token punctuation">)</span><span class="token punctuation">)</span> i<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>insert<span class="token punctuation">)</span><span class="token punctuation">)</span> insertedVnodeQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token comment">// insert\u65B9\u6CD5\u4E2D\u4F1A\u4F9D\u6B21\u8C03\u7528mounted\u65B9\u6CD5</span>
<span class="token function">insert</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token operator">:</span> MountedComponentVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> context<span class="token punctuation">,</span> componentInstance <span class="token punctuation">}</span> <span class="token operator">=</span> vnode
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>componentInstance<span class="token punctuation">.</span>_isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      componentInstance<span class="token punctuation">.</span>_isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">callHook</span><span class="token punctuation">(</span>componentInstance<span class="token punctuation">,</span> <span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">invokeInsertHook</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> initial</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// delay insert hooks for component root nodes, invoke them after the</span>
     <span class="token comment">// element is really inserted</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>initial<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         vnode<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pendingInsert <span class="token operator">=</span> queue
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528insert\u65B9\u6CD5</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$destroy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeDestroy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//</span>
  <span class="token comment">// invoke destroy hooks on current rendered tree</span>
  vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_vnode<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u9500\u6BC1\u513F\u5B50</span>
  <span class="token comment">// fire destroyed hook</span>
  <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;destroyed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_24-vue\u7EC4\u4EF6\u5982\u4F55\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#_24-vue\u7EC4\u4EF6\u5982\u4F55\u901A\u4FE1" aria-hidden="true">#</a> 24.<code>Vue</code>\u7EC4\u4EF6\u5982\u4F55\u901A\u4FE1?</h3><ul><li>\u7236\u5B50\u95F4\u901A\u4FE1 \u7236-&gt;\u5B50\u901A\u8FC7<code>props</code>\u3001\u5B50-&gt; \u7236<code>$on\u3001$emit</code></li><li>\u83B7\u53D6\u7236\u5B50\u7EC4\u4EF6\u5B9E\u4F8B\u7684\u65B9\u5F0F<code>$parent\u3001$children</code></li><li>\u5728\u7236\u7EC4\u4EF6\u4E2D\u63D0\u4F9B\u6570\u636E\u5B50\u7EC4\u4EF6\u8FDB\u884C\u6D88\u8D39 <code>Provide\u3001inject</code></li><li><code>Ref</code>\u83B7\u53D6\u5B9E\u4F8B\u7684\u65B9\u5F0F\u8C03\u7528\u7EC4\u4EF6\u7684\u5C5E\u6027\u6216\u8005\u65B9\u6CD5</li><li><code>Event Bus</code> \u5B9E\u73B0\u8DE8\u7EC4\u4EF6\u901A\u4FE1</li><li><code>Vuex </code>\u72B6\u6001\u7BA1\u7406\u5B9E\u73B0\u901A\u4FE1</li></ul><h3 id="_25-vue\u4E2D\u76F8\u540C\u903B\u8F91\u5982\u4F55\u62BD\u79BB" tabindex="-1"><a class="header-anchor" href="#_25-vue\u4E2D\u76F8\u540C\u903B\u8F91\u5982\u4F55\u62BD\u79BB" aria-hidden="true">#</a> 25.<code>Vue</code>\u4E2D\u76F8\u540C\u903B\u8F91\u5982\u4F55\u62BD\u79BB\uFF1F</h3><ul><li><code>Vue.mixin</code>\u7528\u6CD5 \u7ED9\u7EC4\u4EF6\u6BCF\u4E2A\u751F\u547D\u5468\u671F\uFF0C\u51FD\u6570\u7B49\u90FD\u6DF7\u5165\u4E00\u4E9B\u516C\u5171\u903B\u8F91</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function-variable function">mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">mixin<span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> mixin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u5F53\u524D\u5B9A\u4E49\u7684\u5C5E\u6027\u5408\u5E76\u5230\u6BCF\u4E2A\u7EC4\u4EF6\u4E2D</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token operator">:</span> Object<span class="token punctuation">,</span> child<span class="token operator">:</span> Object<span class="token punctuation">,</span> vm<span class="token operator">?</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span><span class="token operator">:</span> Object <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>child<span class="token punctuation">.</span>_base<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>extends<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u5408\u5E76extends</span>
      parent <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> child<span class="token punctuation">.</span>extends<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>mixins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u5408\u5E76mixin</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> child<span class="token punctuation">.</span>mixins<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parent <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> child<span class="token punctuation">.</span>mixins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u5C5E\u6027\u53CA\u751F\u547D\u5468\u671F\u7684\u5408\u5E76</span>
  <span class="token keyword">let</span> key<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">mergeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">mergeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">mergeField</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> strat <span class="token operator">=</span> strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> defaultStrat<span class="token punctuation">;</span>
    <span class="token comment">// \u8C03\u7528\u4E0D\u540C\u5C5E\u6027\u5408\u5E76\u7B56\u7565\u8FDB\u884C\u5408\u5E76</span>
    options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strat</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> child<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> options<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="_26-\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u5F02\u6B65\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_26-\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u5F02\u6B65\u7EC4\u4EF6" aria-hidden="true">#</a> 26.\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u5F02\u6B65\u7EC4\u4EF6\uFF1F</h3><h4 id="\u7406\u89E3-17" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-17" aria-hidden="true">#</a> \u7406\u89E3:</h4><ul><li><p>\u5982\u679C\u7EC4\u4EF6\u529F\u80FD\u591A\u6253\u5305\u51FA\u7684\u7ED3\u679C\u4F1A\u53D8\u5927\uFF0C\u6211\u53EF\u4EE5\u91C7\u7528\u5F02\u6B65\u7684\u65B9\u5F0F\u6765\u52A0\u8F7D\u7EC4\u4EF6\u3002\u4E3B\u8981\u4F9D\u8D56<code>import()</code>\u8FD9\u4E2A\u8BED\u6CD5\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u6587\u4EF6\u7684\u5206\u5272\u52A0\u8F7D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>components<span class="token operator">:</span><span class="token punctuation">{</span>
	<span class="token function">AddCustomerSchedule</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;../components/AddCustomer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h4 id="\u539F\u7406-14" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-14" aria-hidden="true">#</a> \u539F\u7406:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createComponent</span><span class="token punctuation">(</span>
  <span class="token parameter">Ctor<span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> Function <span class="token operator">|</span> Object <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token operator">?</span>VNodeData<span class="token punctuation">,</span>
  context<span class="token operator">:</span> Component<span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  tag<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">|</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// async component</span>
  <span class="token keyword">let</span> asyncFactory<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">.</span>cid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    asyncFactory <span class="token operator">=</span> Ctor<span class="token punctuation">;</span>
    Ctor <span class="token operator">=</span> <span class="token function">resolveAsyncComponent</span><span class="token punctuation">(</span>asyncFactory<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4\u8C03\u7528\u6B64\u51FD\u6570\u65F6\u8FD4\u56DEundefiend</span>
    <span class="token comment">// \u7B2C\u4E8C\u6B21\u6E32\u67D3\u65F6Ctor\u4E0D\u4E3Aundefined</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Ctor <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">createAsyncPlaceholder</span><span class="token punctuation">(</span>
        <span class="token comment">// \u6E32\u67D3\u5360\u4F4D\u7B26 \u7A7A\u865A\u62DF\u8282\u70B9</span>
        asyncFactory<span class="token punctuation">,</span>
        data<span class="token punctuation">,</span>
        context<span class="token punctuation">,</span>
        children<span class="token punctuation">,</span>
        tag
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">resolveAsyncComponent</span><span class="token punctuation">(</span><span class="token parameter">factory<span class="token operator">:</span> Function<span class="token punctuation">,</span> baseCtor<span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 3.\u5728\u6B21\u6E32\u67D3\u65F6\u53EF\u4EE5\u62FF\u5230\u83B7\u53D6\u7684\u6700\u65B0\u7EC4\u4EF6</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span>resolved<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> resolve <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token operator">:</span> Object <span class="token operator">|</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    factory<span class="token punctuation">.</span>resolved <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2. \u5F3A\u5236\u66F4\u65B0\u89C6\u56FE\u91CD\u65B0\u6E32\u67D3</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      owners<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> reject <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>errorComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      factory<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.\u5C06resolve\u65B9\u6CD5\u548Creject\u65B9\u6CD5\u4F20\u5165\uFF0C\u7528\u6237\u8C03\u7528resolve\u65B9\u6CD5\u540E</span>
  sync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> factory<span class="token punctuation">.</span>resolved<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="_27-\u4EC0\u4E48\u662F\u4F5C\u7528\u57DF\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#_27-\u4EC0\u4E48\u662F\u4F5C\u7528\u57DF\u63D2\u69FD" aria-hidden="true">#</a> 27.\u4EC0\u4E48\u662F\u4F5C\u7528\u57DF\u63D2\u69FD?</h3><h4 id="\u7406\u89E3-18" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-18" aria-hidden="true">#</a> \u7406\u89E3:</h4><h4 id="_1-\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#_1-\u63D2\u69FD" aria-hidden="true">#</a> 1.\u63D2\u69FD\uFF1A</h4><ul><li>\u521B\u5EFA\u7EC4\u4EF6\u865A\u62DF\u8282\u70B9\u65F6\uFF0C\u4F1A\u5C06\u7EC4\u4EF6\u7684\u513F\u5B50\u7684\u865A\u62DF\u8282\u70B9\u4FDD\u5B58\u8D77\u6765\u3002\u5F53\u521D\u59CB\u5316\u7EC4\u4EF6\u65F6,\u901A\u8FC7\u63D2\u69FD\u5C5E\u6027\u5C06\u513F\u5B50\u8FDB\u884C\u5206\u7C7B <code>{a:[vnode],b[vnode]}</code></li><li>\u6E32\u67D3\u7EC4\u4EF6\u65F6\u4F1A\u62FF\u5BF9\u5E94\u7684 slot \u5C5E\u6027\u7684\u8282\u70B9\u8FDB\u884C\u66FF\u6362\u64CD\u4F5C\u3002\uFF08\u63D2\u69FD\u7684\u4F5C\u7528\u57DF\u4E3A\u7236\u7EC4\u4EF6\uFF09</li></ul><h4 id="_2-\u4F5C\u7528\u57DF\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#_2-\u4F5C\u7528\u57DF\u63D2\u69FD" aria-hidden="true">#</a> 2.\u4F5C\u7528\u57DF\u63D2\u69FD:</h4><ul><li>\u4F5C\u7528\u57DF\u63D2\u69FD\u5728\u89E3\u6790\u7684\u65F6\u5019\uFF0C\u4E0D\u4F1A\u4F5C\u4E3A\u7EC4\u4EF6\u7684\u5B69\u5B50\u8282\u70B9\u3002\u4F1A\u89E3\u6790\u6210\u51FD\u6570\uFF0C\u5F53\u5B50\u7EC4\u4EF6\u6E32\u67D3\u65F6\uFF0C\u4F1A\u8C03\u7528\u6B64\u51FD\u6570\u8FDB\u884C\u6E32\u67D3\u3002\uFF08\u63D2\u69FD\u7684\u4F5C\u7528\u57DF\u4E3A\u5B50\u7EC4\u4EF6\uFF09</li></ul><h4 id="\u539F\u7406-15" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-15" aria-hidden="true">#</a> \u539F\u7406:</h4><p><img src="`+w+`" alt=""></p><h4 id="_1-\u63D2\u69FD-1" tabindex="-1"><a class="header-anchor" href="#_1-\u63D2\u69FD-1" aria-hidden="true">#</a> 1.\u63D2\u69FD:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ele <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;my-component&gt;
        &lt;div slot=&quot;header&quot;&gt;node&lt;/div&gt;
        &lt;div&gt;react&lt;/div&gt;
        &lt;div slot=&quot;footer&quot;&gt;vue&lt;/div&gt;
    &lt;/my-component&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/** 
with(this) <span class="token punctuation">{</span>
    return _c(&#39;my-component&#39;, [_c(&#39;div&#39;, <span class="token punctuation">{</span>
        attrs: <span class="token punctuation">{</span>
            &quot;slot&quot;: &quot;header&quot;
        <span class="token punctuation">}</span>,
        slot: &quot;header&quot;
    <span class="token punctuation">}</span>, [_v(&quot;node&quot;)]), _v(&quot; &quot;), _c(&#39;div&#39;, [_v(&quot;react&quot;)]), _v(&quot; &quot;), _c(&#39;div&#39;, <span class="token punctuation">{</span>
        attrs: <span class="token punctuation">{</span>
            &quot;slot&quot;: &quot;footer&quot;
        <span class="token punctuation">}</span>,
        slot: &quot;footer&quot;
    <span class="token punctuation">}</span>, [_v(&quot;vue&quot;)])])
<span class="token punctuation">}</span>
*/</span>

<span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ele <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
        &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;
        &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;
        &lt;slot&gt;&lt;/slot&gt;
    &lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return _c(&#39;div&#39;, [_t(&quot;header&quot;), _v(&quot; &quot;), _t(&quot;footer&quot;), _v(&quot; &quot;), _t(&quot;default&quot;)], 2)
<span class="token punctuation">}</span>
**/</span>
<span class="token comment">// _t\u5B9A\u4E49\u5728 core/instance/render-helpers/index.js</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="\u4F5C\u7528\u57DF\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF\u63D2\u69FD" aria-hidden="true">#</a> \u4F5C\u7528\u57DF\u63D2\u69FD:</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ele <span class="token operator">=</span> VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;app&gt;
        &lt;div slot-scope=&quot;msg&quot; slot=&quot;footer&quot;&gt;{{msg.a}}&lt;/div&gt;
    &lt;/app&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return _c(&#39;app&#39;, <span class="token punctuation">{</span>
        scopedSlots: _u([<span class="token punctuation">{</span> // \u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u5185\u5BB9\u4F1A\u88AB\u6E32\u67D3\u6210\u4E00\u4E2A\u51FD\u6570
            key: &quot;footer&quot;,
            fn: function (msg) <span class="token punctuation">{</span>
                return _c(&#39;div&#39;, <span class="token punctuation">{</span><span class="token punctuation">}</span>, [_v(_s(msg.a))])
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>])
    <span class="token punctuation">}</span>)
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
*/</span>
<span class="token keyword">const</span> VueTemplateCompiler <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;vue-template-compiler&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

VueTemplateCompiler<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
        &lt;slot name=&quot;footer&quot; a=&quot;1&quot; b=&quot;2&quot;&gt;&lt;/slot&gt;
    &lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
with(this) <span class="token punctuation">{</span>
    return _c(&#39;div&#39;, [_t(&quot;footer&quot;, null, <span class="token punctuation">{</span>
        &quot;a&quot;: &quot;1&quot;,
        &quot;b&quot;: &quot;2&quot;
    <span class="token punctuation">}</span>)], 2)
<span class="token punctuation">}</span>
**/</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_28-\u8C08\u8C08\u4F60\u5BF9-keep-alive-\u7684\u4E86\u89E3" tabindex="-1"><a class="header-anchor" href="#_28-\u8C08\u8C08\u4F60\u5BF9-keep-alive-\u7684\u4E86\u89E3" aria-hidden="true">#</a> 28.\u8C08\u8C08\u4F60\u5BF9 keep-alive \u7684\u4E86\u89E3\uFF1F</h3><h4 id="\u7406\u89E3-19" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-19" aria-hidden="true">#</a> \u7406\u89E3:</h4><p><code>keep-alive</code>\u53EF\u4EE5\u5B9E\u73B0\u7EC4\u4EF6\u7684\u7F13\u5B58\uFF0C\u5F53\u7EC4\u4EF6\u5207\u6362\u65F6\u4E0D\u4F1A\u5BF9\u5F53\u524D\u7EC4\u4EF6\u8FDB\u884C\u5378\u8F7D,\u5E38\u7528\u7684 2 \u4E2A\u5C5E\u6027<code>include</code>/<code>exclude</code>,2 \u4E2A\u751F\u547D\u5468\u671F<code>activated</code>,<code>deactivated</code></p><h4 id="\u539F\u7406-16" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406-16" aria-hidden="true">#</a> \u539F\u7406:</h4><blockquote><p><code>core/components/keep-alive.js</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;keep-alive&#39;</span><span class="token punctuation">,</span>
  abstract<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u62BD\u8C61\u7EC4\u4EF6</span>

  props<span class="token operator">:</span> <span class="token punctuation">{</span>
    include<span class="token operator">:</span> patternTypes<span class="token punctuation">,</span>
    exclude<span class="token operator">:</span> patternTypes<span class="token punctuation">,</span>
    max<span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u7F13\u5B58\u5217\u8868</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u7F13\u5B58\u7EC4\u4EF6\u7684key\u5217\u8868</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// keep-alive\u9500\u6BC1\u65F6 \u4F1A\u6E05\u7A7A\u6240\u6709\u7684\u7F13\u5B58\u548Ckey</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5FAA\u73AF\u9500\u6BC1</span>
      <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F1A\u76D1\u63A7include \u548C include\u5C5E\u6027 \u8FDB\u884C\u7EC4\u4EF6\u7684\u7F13\u5B58\u5904\u7406</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">&#39;include&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">&#39;exclude&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default<span class="token punctuation">;</span> <span class="token comment">// \u4F1A\u9ED8\u8BA4\u62FF\u63D2\u69FD</span>
    <span class="token keyword">const</span> vnode<span class="token operator">:</span> VNode <span class="token operator">=</span> <span class="token function">getFirstComponentChild</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u7F13\u5B58\u7B2C\u4E00\u4E2A\u7EC4\u4EF6</span>
    <span class="token keyword">const</span> componentOptions<span class="token operator">:</span> <span class="token operator">?</span>VNodeComponentOptions <span class="token operator">=</span> vnode <span class="token operator">&amp;&amp;</span> vnode<span class="token punctuation">.</span>componentOptions<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>componentOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// check pattern</span>
      <span class="token keyword">const</span> name<span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> <span class="token function">getComponentName</span><span class="token punctuation">(</span>componentOptions<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u51FA\u7EC4\u4EF6\u7684\u540D\u5B57</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> include<span class="token punctuation">,</span> exclude <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token comment">// \u5224\u65AD\u662F\u5426\u7F13\u5B58</span>
        <span class="token comment">// not included</span>
        <span class="token punctuation">(</span>include <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>name <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>include<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token comment">// excluded</span>
        <span class="token punctuation">(</span>exclude <span class="token operator">&amp;&amp;</span> name <span class="token operator">&amp;&amp;</span> <span class="token function">matches</span><span class="token punctuation">(</span>exclude<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> vnode<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> <span class="token punctuation">{</span> cache<span class="token punctuation">,</span> keys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> key<span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span>
        vnode<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token keyword">null</span>
          <span class="token operator">?</span> <span class="token comment">// same constructor may get registered as different local components</span>
            <span class="token comment">// so cid alone is not enough (#3269)</span>
            componentOptions<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>cid <span class="token operator">+</span> <span class="token punctuation">(</span>componentOptions<span class="token punctuation">.</span>tag <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">::</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentOptions<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> vnode<span class="token punctuation">.</span>key<span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u7EC4\u4EF6\u6CA1key \u5C31\u81EA\u5DF1\u901A\u8FC7 \u7EC4\u4EF6\u7684\u6807\u7B7E\u548Ckey\u548Ccid \u62FC\u63A5\u4E00\u4E2Akey</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>componentInstance<span class="token punctuation">;</span> <span class="token comment">//  \u76F4\u63A5\u62FF\u5230\u7EC4\u4EF6\u5B9E\u4F8B</span>
        <span class="token comment">// make current key freshest</span>
        <span class="token function">remove</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u5F53\u524D\u7684  [b,c,d,e,a]   // LRU \u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u6CD5</span>
        keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5E76\u5C06key\u653E\u5230\u540E\u9762[b,a]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> vnode<span class="token punctuation">;</span> <span class="token comment">// \u7F13\u5B58vnode</span>
        keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06key \u5B58\u5165</span>
        <span class="token comment">// prune oldest entry</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7F13\u5B58\u7684\u592A\u591A\u8D85\u8FC7\u4E86max \u5C31\u9700\u8981\u5220\u9664\u6389</span>
          <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keys<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8981\u5220\u9664\u7B2C0\u4E2A \u4F46\u662F\u73B0\u5728\u6E32\u67D3\u7684\u5C31\u662F\u7B2C0\u4E2A</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>keepAlive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// \u5E76\u4E14\u6807\u51C6keep-alive\u4E0B\u7684\u7EC4\u4EF6\u662F\u4E00\u4E2A\u7F13\u5B58\u7EC4\u4EF6</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vnode <span class="token operator">||</span> <span class="token punctuation">(</span>slot <span class="token operator">&amp;&amp;</span> slot<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u5F53\u524D\u7684\u865A\u62DF\u8282\u70B9</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><h3 id="_29-vue\u4E2D\u5E38\u89C1\u6027\u80FD\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_29-vue\u4E2D\u5E38\u89C1\u6027\u80FD\u4F18\u5316" aria-hidden="true">#</a> 29.<code>Vue</code>\u4E2D\u5E38\u89C1\u6027\u80FD\u4F18\u5316</h3><h3 id="_1-\u7F16\u7801\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u7801\u4F18\u5316" aria-hidden="true">#</a> 1.\u7F16\u7801\u4F18\u5316:</h3><ul><li><p>1.\u4E0D\u8981\u5C06\u6240\u6709\u7684\u6570\u636E\u90FD\u653E\u5728 data \u4E2D\uFF0Cdata \u4E2D\u7684\u6570\u636E\u90FD\u4F1A\u589E\u52A0 getter \u548C setter\uFF0C\u4F1A\u6536\u96C6\u5BF9\u5E94\u7684 watcher</p></li><li><p>2.<code>vue</code> \u5728 v-for \u65F6\u7ED9\u6BCF\u9879\u5143\u7D20\u7ED1\u5B9A\u4E8B\u4EF6\u9700\u8981\u7528\u4E8B\u4EF6\u4EE3\u7406</p></li></ul><p>\u53EF\u4EE5\u4F7F\u7528\u4E8B\u4EF6\u4EE3\u7406\uFF0C\u53EA\u5728\u7236\u5143\u7D20\u4E0A\u7ED1\u5B9A onClick \u65B9\u6CD5\uFF0C\u5728\u5B50\u5143\u7D20\u4E0A\u7ED1\u5B9A\u81EA\u5B9A\u4E49\u5C5E\u6027 data-index\uFF0C\u8D4B\u503C\u4E0B\u6807\uFF0C\u5F53\u70B9\u51FB\u5B50\u5143\u7D20\u65F6\uFF0C\u7236\u5143\u7D20\u7684\u70B9\u51FB\u4E8B\u4EF6\u6355\u83B7\u5B50\u5143\u7D20\u7684\u70B9\u51FB\u4E8B\u4EF6\uFF0C\u7136\u540E\u5728\u70B9\u51FB\u4E8B\u4EF6\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u4F7F\u7528 e.target.getAttribute(&#39;data-index&#39;)\uFF0C\u6765\u83B7\u53D6\u7ED1\u5B9A\u5728\u81EA\u5B9A\u4E49\u5C5E\u6027 data-index \u4E0A\u7684\u4E0B\u6807</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item, index) in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ item }}
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;tips1&#39;</span><span class="token punctuation">,</span> <span class="token comment">// vue\u4E8B\u4EF6\u4EE3\u7406</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;\u9879\u76EE1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u9879\u76EE2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u9879\u76EE3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  methods<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li>3.<code>SPA</code>\u9875\u9762\u91C7\u7528 keep-alive \u7F13\u5B58\u7EC4\u4EF6</li><li>4.\u62C6\u5206\u7EC4\u4EF6( \u63D0\u9AD8\u590D\u7528\u6027\u3001\u589E\u52A0\u4EE3\u7801\u7684\u53EF\u7EF4\u62A4\u6027,\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u6E32\u67D3 )</li><li>5.<code>v-if</code> \u5F53\u503C\u4E3A false \u65F6\u5185\u90E8\u6307\u4EE4\u4E0D\u4F1A\u6267\u884C,\u5177\u6709\u963B\u65AD\u529F\u80FD\uFF0C\u5F88\u591A\u60C5\u51B5\u4E0B\u4F7F\u7528 v-if \u66FF\u4EE3 v-show</li><li>6.<code>key</code>\u4FDD\u8BC1\u552F\u4E00\u6027 ( \u9ED8\u8BA4<code>vue</code>\u4F1A\u91C7\u7528\u5C31\u5730\u590D\u7528\u7B56\u7565 )</li><li>7.<code>Object.freeze</code> \u51BB\u7ED3\u6570\u636E</li><li>8.\u5408\u7406\u4F7F\u7528\u8DEF\u7531\u61D2\u52A0\u8F7D\u3001\u5F02\u6B65\u7EC4\u4EF6</li><li>9.\u5C3D\u91CF\u91C7\u7528 runtime \u8FD0\u884C\u65F6\u7248\u672C</li><li>10.\u6570\u636E\u6301\u4E45\u5316\u7684\u95EE\u9898 \uFF08\u9632\u6296\u3001\u8282\u6D41\uFF09</li></ul><h3 id="_2-vue\u52A0\u8F7D\u6027\u80FD\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_2-vue\u52A0\u8F7D\u6027\u80FD\u4F18\u5316" aria-hidden="true">#</a> 2.<code>Vue</code>\u52A0\u8F7D\u6027\u80FD\u4F18\u5316:</h3><ul><li><p>\u7B2C\u4E09\u65B9\u6A21\u5757\u6309\u9700\u5BFC\u5165 (<code>babel-plugin-component</code>)</p></li><li><p>\u6EDA\u52A8\u5230\u53EF\u89C6\u533A\u57DF\u52A8\u6001\u52A0\u8F7D ( https://tangbc.github.io/vue-virtual-scroll-list )</p></li><li><p>\u56FE\u7247\u61D2\u52A0\u8F7D (https://github.com/hilongjw/vue-lazyload.git)</p></li></ul><h3 id="_3-\u7528\u6237\u4F53\u9A8C" tabindex="-1"><a class="header-anchor" href="#_3-\u7528\u6237\u4F53\u9A8C" aria-hidden="true">#</a> 3.\u7528\u6237\u4F53\u9A8C:</h3><ul><li><code>app-skeleton</code>\u9AA8\u67B6\u5C4F</li><li><code>app-shell</code>app \u58F3</li><li><code>pwa</code></li></ul><h3 id="_4-seo\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_4-seo\u4F18\u5316" aria-hidden="true">#</a> 4.<code>SEO</code>\u4F18\u5316\uFF1A</h3><ul><li>\u9884\u6E32\u67D3\u63D2\u4EF6 <code>prerender-spa-plugin</code></li><li>\u670D\u52A1\u7AEF\u6E32\u67D3<code>ssr</code></li></ul><h3 id="_5-\u6253\u5305\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_5-\u6253\u5305\u4F18\u5316" aria-hidden="true">#</a> 5.\u6253\u5305\u4F18\u5316:</h3><ul><li>\u4F7F\u7528<code>cdn</code>\u7684\u65B9\u5F0F\u52A0\u8F7D\u7B2C\u4E09\u65B9\u6A21\u5757</li><li>\u591A\u7EBF\u7A0B\u6253\u5305 <code>happypack </code></li><li><code>splitChunks</code> \u62BD\u79BB\u516C\u5171\u6587\u4EF6</li><li><code>sourceMap</code>\u751F\u6210</li></ul><h3 id="_6-\u7F13\u5B58-\u538B\u7F29" tabindex="-1"><a class="header-anchor" href="#_6-\u7F13\u5B58-\u538B\u7F29" aria-hidden="true">#</a> 6.\u7F13\u5B58\uFF0C\u538B\u7F29</h3><ul><li>\u5BA2\u6237\u7AEF\u7F13\u5B58\u3001\u670D\u52A1\u7AEF\u7F13\u5B58</li><li>\u670D\u52A1\u7AEF<code>gzip</code>\u538B\u7F29</li></ul><h3 id="_30-vue3-0\u4F60\u77E5\u9053\u6709\u54EA\u4E9B\u6539\u8FDB" tabindex="-1"><a class="header-anchor" href="#_30-vue3-0\u4F60\u77E5\u9053\u6709\u54EA\u4E9B\u6539\u8FDB" aria-hidden="true">#</a> 30.<code>Vue3.0</code>\u4F60\u77E5\u9053\u6709\u54EA\u4E9B\u6539\u8FDB?</h3><ul><li><p><code>Vue3</code>\u91C7\u7528\u4E86 TS \u6765\u7F16\u5199</p></li><li><p>\u652F\u6301 <code>Composition API </code></p></li><li><p><code>Vue3</code>\u4E2D\u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406\u6539\u6210<code>proxy</code></p></li><li><p><code> vdom</code>\u7684\u5BF9\u6BD4\u7B97\u6CD5\u66F4\u65B0\uFF0C\u53EA\u66F4\u65B0<code>vdom</code>\u7684\u7ED1\u5B9A\u4E86\u52A8\u6001\u6570\u636E\u7684\u90E8\u5206</p></li></ul><h3 id="_31-\u5B9E\u73B0hash\u8DEF\u7531\u548Chistory\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#_31-\u5B9E\u73B0hash\u8DEF\u7531\u548Chistory\u8DEF\u7531" aria-hidden="true">#</a> 31.\u5B9E\u73B0<code>hash</code>\u8DEF\u7531\u548C<code>history</code>\u8DEF\u7531</h3><ul><li><code>onhashchange</code></li><li><code>history.pushState</code></li></ul><h3 id="_32-vue-router\u4E2D\u5BFC\u822A\u5B88\u536B\u6709\u54EA\u4E9B" tabindex="-1"><a class="header-anchor" href="#_32-vue-router\u4E2D\u5BFC\u822A\u5B88\u536B\u6709\u54EA\u4E9B" aria-hidden="true">#</a> 32.<code>Vue-Router</code>\u4E2D\u5BFC\u822A\u5B88\u536B\u6709\u54EA\u4E9B\uFF1F</h3><h3 id="\u5B8C\u6574\u7684\u5BFC\u822A\u89E3\u6790\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u7684\u5BFC\u822A\u89E3\u6790\u6D41\u7A0B" aria-hidden="true">#</a> \u5B8C\u6574\u7684\u5BFC\u822A\u89E3\u6790\u6D41\u7A0B</h3><ol><li>\u5BFC\u822A\u88AB\u89E6\u53D1\u3002</li><li>\u5728\u5931\u6D3B\u7684\u7EC4\u4EF6\u91CC\u8C03\u7528\u79BB\u5F00\u5B88\u536B\u3002</li><li>\u8C03\u7528\u5168\u5C40\u7684 <code>beforeEach</code> \u5B88\u536B\u3002</li><li>\u5728\u91CD\u7528\u7684\u7EC4\u4EF6\u91CC\u8C03\u7528 <code>beforeRouteUpdate</code> \u5B88\u536B (2.2+)\u3002</li><li>\u5728\u8DEF\u7531\u914D\u7F6E\u91CC\u8C03\u7528 <code>beforeEnter</code>\u3002</li><li>\u89E3\u6790\u5F02\u6B65\u8DEF\u7531\u7EC4\u4EF6\u3002</li><li>\u5728\u88AB\u6FC0\u6D3B\u7684\u7EC4\u4EF6\u91CC\u8C03\u7528 <code>beforeRouteEnter</code>\u3002</li><li>\u8C03\u7528\u5168\u5C40\u7684 <code>beforeResolve</code> \u5B88\u536B (2.5+)\u3002</li><li>\u5BFC\u822A\u88AB\u786E\u8BA4\u3002</li><li>\u8C03\u7528\u5168\u5C40\u7684 <code>afterEach</code> \u94A9\u5B50\u3002</li><li>\u89E6\u53D1 DOM \u66F4\u65B0\u3002</li><li>\u7528\u521B\u5EFA\u597D\u7684\u5B9E\u4F8B\u8C03\u7528 <code>beforeRouteEnter</code> \u5B88\u536B\u4E2D\u4F20\u7ED9 <code>next</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</li></ol><h3 id="_33-action-\u548C-mutation\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_33-action-\u548C-mutation\u533A\u522B" aria-hidden="true">#</a> 33.<code>action</code> \u548C <code>mutation</code>\u533A\u522B</h3><ul><li><code>mutation</code>\u662F\u540C\u6B65\u66F4\u65B0\u6570\u636E(\u5185\u90E8\u4F1A\u8FDB\u884C\u662F\u5426\u4E3A\u5F02\u6B65\u65B9\u5F0F\u66F4\u65B0\u6570\u636E\u7684\u68C0\u6D4B)</li><li><code>action</code> \u5F02\u6B65\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u83B7\u53D6\u6570\u636E\u540E\u8C03\u7528<code>mutation</code>\u63D0\u4EA4\u6700\u7EC8\u6570\u636E</li></ul><h3 id="_34-\u7B80\u8FF0vuex\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_34-\u7B80\u8FF0vuex\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> 34.\u7B80\u8FF0<code>Vuex</code>\u5DE5\u4F5C\u539F\u7406</h3><p><img src="https://vuex.vuejs.org/vuex.png" alt=""></p>`,229);function V(C,O){return a(),p(e,null,[q,n("p",null,[_,n("code",null,t(),1)]),j],64)}var T=c(x,[["render",V]]);export{T as default};
