"use strict";(self["webpackChunkmy_vue"]=self["webpackChunkmy_vue"]||[]).push([[764],{1764:function(t,e,i){i.r(e),i.d(e,{default:function(){return w}});var s=i(3396),h=i(7139);const a=t=>((0,s.dD)("data-v-4fcc6d2d"),t=t(),(0,s.Cn)(),t),r={class:"tetris-container"},n={class:"game-info"},o={class:"score-board"},l=a((()=>(0,s._)("h2",null,"俄罗斯方块",-1))),c={class:"next-shape"},d=a((()=>(0,s._)("h3",null,"下一个方块",-1))),u={ref:"nextCanvas",width:120,height:120},g={class:"controls"},p=["width","height"];function S(t,e,i,a,S,v){return(0,s.wg)(),(0,s.iD)("div",r,[(0,s._)("div",n,[(0,s._)("div",o,[l,(0,s._)("p",null,"分数: "+(0,h.zw)(S.score),1),(0,s._)("p",null,"等级: "+(0,h.zw)(S.level),1),(0,s._)("p",null,"消除行数: "+(0,h.zw)(S.lines),1)]),(0,s._)("div",c,[d,(0,s._)("canvas",u,null,512)]),(0,s._)("div",g,[(0,s._)("button",{onClick:e[0]||(e[0]=(...t)=>v.startGame&&v.startGame(...t))},"开始游戏"),(0,s._)("button",{onClick:e[1]||(e[1]=(...t)=>v.pauseGame&&v.pauseGame(...t))},"暂停")])]),(0,s._)("canvas",{ref:"canvas",width:S.canvasWidth,height:S.canvasHeight},null,8,p)])}i(541);var v={data(){return{canvasWidth:390,canvasHeight:660,blockSize:30,board:[],currentShape:[],currentPosition:{x:0,y:0},shapes:[[[1,1,1,1]],[[1,1,1],[0,1,0]],[[1,1],[1,1]],[[0,1,1],[1,1,0]],[[1,1,0],[0,1,1]],[[1,0,0],[1,1,1]],[[0,0,1],[1,1,1]]],score:0,level:1,lines:0,gameStarted:!1,gamePaused:!1,nextShape:null,gameInterval:null,dropSpeed:1e3,shadowPosition:{x:0,y:0},gameOver:!1,blockColors:{I:"#00BCD4",T:"#9C27B0",O:"#FFEB3B",S:"#4CAF50",Z:"#F44336",L:"#FF9800",J:"#2196F3"},currentShapeType:null}},methods:{initBoard(){this.board=Array.from({length:this.canvasHeight/this.blockSize},(()=>Array(this.canvasWidth/this.blockSize).fill(0)))},drawNextShape(){const t=this.$refs.nextCanvas,e=t.getContext("2d");if(e.clearRect(0,0,120,120),e.fillStyle="#1a1a1a",e.fillRect(0,0,120,120),null!==this.nextShape){const t=["I","T","O","S","Z","L","J"][this.nextShape],i=this.blockColors[t],s=this.shapes[this.nextShape],h=20,a=(120-s[0].length*h)/2,r=(120-s.length*h)/2;for(let n=0;n<s.length;n++)for(let t=0;t<s[n].length;t++)if(s[n][t]){const s=a+t*h,o=r+n*h;e.fillStyle=i,e.fillRect(s+1,o+1,h-2,h-2);const l=e.createLinearGradient(s,o,s,o+h);l.addColorStop(0,"rgba(255, 255, 255, 0.3)"),l.addColorStop(.5,"rgba(255, 255, 255, 0)"),e.fillStyle=l,e.fillRect(s+1,o+1,h-2,h-2),e.strokeStyle="rgba(0, 0, 0, 0.3)",e.lineWidth=1,e.strokeRect(s+1,o+1,h-2,h-2)}}},newShape(){if(null===this.nextShape&&(this.nextShape=Math.floor(Math.random()*this.shapes.length)),this.currentShape=this.shapes[this.nextShape],this.currentShapeType=["I","T","O","S","Z","L","J"][this.nextShape],this.currentPosition={x:0,y:Math.floor(this.canvasWidth/this.blockSize/2)-Math.floor(this.currentShape[0].length/2)},!this.canMove(this.currentPosition.x,this.currentPosition.y))return this.gameOver=!0,clearInterval(this.gameInterval),void alert("游戏结束！得分："+this.score);this.nextShape=Math.floor(Math.random()*this.shapes.length),this.drawNextShape(),this.updateShadow()},updateShadow(){this.shadowPosition={...this.currentPosition};while(this.canMove(this.shadowPosition.x+1,this.shadowPosition.y))this.shadowPosition.x++},drawShape(t){const e="rgba(255, 255, 255, 0.1)";for(let s=0;s<this.currentShape.length;s++)for(let i=0;i<this.currentShape[s].length;i++)this.currentShape[s][i]&&this.drawBlock(t,this.shadowPosition.y+i,this.shadowPosition.x+s,e);const i=this.blockColors[this.currentShapeType];for(let s=0;s<this.currentShape.length;s++)for(let e=0;e<this.currentShape[s].length;e++)this.currentShape[s][e]&&this.drawBlock(t,this.currentPosition.y+e,this.currentPosition.x+s,i)},moveLeft(){!this.gameStarted||this.gamePaused||this.gameOver||this.canMove(this.currentPosition.x,this.currentPosition.y-1)&&(this.currentPosition.y--,this.updateShadow(),this.update())},moveRight(){!this.gameStarted||this.gamePaused||this.gameOver||this.canMove(this.currentPosition.x,this.currentPosition.y+1)&&(this.currentPosition.y++,this.updateShadow(),this.update())},checkLines(){let t=0;for(let s=0;s<this.board.length;s++)this.board[s].every((t=>t))&&(t++,this.board.splice(s,1),this.board.unshift(Array(this.canvasWidth/this.blockSize).fill(0)));const e=[0,100,300,500,800];this.score+=e[t]*this.level,this.lines+=t;const i=Math.min(10,Math.floor(this.lines/10)+1);i!==this.level&&(this.level=i,this.dropSpeed=Math.max(100,1e3-100*(this.level-1)),this.run())},drawGrid(t){t.fillStyle="#1a1a1a",t.fillRect(0,0,this.canvasWidth,this.canvasHeight),t.strokeStyle="rgba(255, 255, 255, 0.2)",t.lineWidth=1;for(let e=0;e<=this.canvasWidth;e+=this.blockSize)t.beginPath(),t.moveTo(e,0),t.lineTo(e,this.canvasHeight),t.stroke();for(let e=0;e<=this.canvasHeight;e+=this.blockSize)t.beginPath(),t.moveTo(0,e),t.lineTo(this.canvasWidth,e),t.stroke()},drawBlock(t,e,i,s){const h=e*this.blockSize,a=i*this.blockSize,r=this.blockSize;t.fillStyle=s,t.fillRect(h+1,a+1,r-2,r-2);const n=t.createLinearGradient(h,a,h,a+r);n.addColorStop(0,"rgba(255, 255, 255, 0.3)"),n.addColorStop(.5,"rgba(255, 255, 255, 0)"),t.fillStyle=n,t.fillRect(h+1,a+1,r-2,r-2),t.strokeStyle="rgba(0, 0, 0, 0.3)",t.lineWidth=2,t.strokeRect(h+1,a+1,r-2,r-2)},drawBoard(t){this.drawGrid(t);for(let e=0;e<this.board.length;e++)for(let i=0;i<this.board[e].length;i++)this.board[e][i]&&this.drawBlock(t,i,e,"#4A90E2")},update(){const t=this.$refs.canvas,e=t.getContext("2d");e.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.drawGrid(e),this.gameStarted&&(this.drawBoard(e),this.drawShape(e))},moveDown(){this.gameStarted&&!this.gamePaused&&(this.canMove(this.currentPosition.x+1,this.currentPosition.y)?(this.currentPosition.x++,this.update()):(this.freezeShape(),this.checkLines(),this.newShape()))},rotate(){if(!this.gameStarted||this.gamePaused)return;const t=this.getRotatedShape();this.canRotate(t)&&(this.currentShape=t,this.update())},getRotatedShape(){const t=this.currentShape.length,e=this.currentShape[0].length,i=Array.from({length:e},(()=>Array(t).fill(0)));for(let s=0;s<t;s++)for(let h=0;h<e;h++)i[h][t-1-s]=this.currentShape[s][h];return i},canMove(t,e){for(let i=0;i<this.currentShape.length;i++)for(let s=0;s<this.currentShape[i].length;s++)if(this.currentShape[i][s]){const h=t+i,a=e+s;if(h<0||h>=this.board.length||a<0||a>=this.board[0].length||this.board[h][a])return!1}return!0},canRotate(t){const e=this.currentPosition.x,i=this.currentPosition.y;for(let s=0;s<t.length;s++)for(let h=0;h<t[s].length;h++)if(t[s][h]){const t=e+s,a=i+h;if(t<0||t>=this.board.length||a<0||a>=this.board[0].length||this.board[t][a])return!1}return!0},freezeShape(){for(let t=0;t<this.currentShape.length;t++)for(let e=0;e<this.currentShape[t].length;e++)this.currentShape[t][e]&&(this.board[this.currentPosition.x+t][this.currentPosition.y+e]=1)},handleKeydown(t){switch(t.key){case"ArrowLeft":this.moveLeft();break;case"ArrowRight":this.moveRight();break;case"ArrowDown":this.moveDown();break;case"ArrowUp":this.rotate();break;case" ":this.hardDrop();break}},hardDrop(){if(this.gameStarted&&!this.gamePaused){while(this.canMove(this.currentPosition.x+1,this.currentPosition.y))this.currentPosition.x++;this.moveDown()}},startGame(){this.gameStarted||(this.gameStarted=!0,this.gameOver=!1,this.score=0,this.level=1,this.lines=0,this.initBoard(),this.newShape(),this.run())},pauseGame(){this.gamePaused=!this.gamePaused},run(){this.update(),this.gameInterval&&clearInterval(this.gameInterval),this.gameStarted&&(this.gameInterval=setInterval((()=>{this.gamePaused||this.moveDown()}),this.dropSpeed))}},mounted(){window.addEventListener("keydown",this.handleKeydown),this.update()},beforeUnmount(){window.removeEventListener("keydown",this.handleKeydown),this.gameInterval&&clearInterval(this.gameInterval)}},f=i(89);const m=(0,f.Z)(v,[["render",S],["__scopeId","data-v-4fcc6d2d"]]);var w=m}}]);