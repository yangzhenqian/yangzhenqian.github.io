"use strict";(self["webpackChunkgame"]=self["webpackChunkgame"]||[]).push([[547],{7547:function(s,i,t){t.r(i),t.d(i,{default:function(){return j}});var e=t(3396),a=t(7139),r=t(9242);const l=s=>((0,e.dD)("data-v-533aed7d"),s=s(),(0,e.Cn)(),s),d={class:"memory-game"},o={class:"game-header"},c={class:"game-info"},m={class:"moves"},h={class:"timer"},n={class:"pairs"},f={class:"controls"},u=["disabled"],p=l((()=>(0,e._)("option",{value:"easy"},"简单 (4x4)",-1))),v=l((()=>(0,e._)("option",{value:"medium"},"中等 (6x6)",-1))),y=l((()=>(0,e._)("option",{value:"hard"},"困难 (8x8)",-1))),g=[p,v,y],b=["disabled"],S={class:"board-container"},_=["onClick"],C={class:"card-inner"},w=l((()=>(0,e._)("div",{class:"card-front"},"❓",-1))),T={class:"card-back"},z={class:"game-footer"},P={key:0,class:"best-scores"},k=l((()=>(0,e._)("h3",null,"最佳记录",-1)));function M(s,i,t,l,p,v){return(0,e.wg)(),(0,e.iD)("div",d,[(0,e._)("div",o,[(0,e._)("div",c,[(0,e._)("div",m,"步数: "+(0,a.zw)(p.moves),1),(0,e._)("div",h,"⏱️ "+(0,a.zw)(v.formatTime(p.time)),1),(0,e._)("div",n,"配对: "+(0,a.zw)(p.matchedPairs)+"/"+(0,a.zw)(v.totalPairs),1)]),(0,e._)("div",f,[(0,e.wy)((0,e._)("select",{"onUpdate:modelValue":i[0]||(i[0]=s=>p.difficulty=s),onChange:i[1]||(i[1]=(...s)=>v.newGame&&v.newGame(...s)),disabled:p.isPlaying},g,40,u),[[r.bM,p.difficulty]]),(0,e._)("button",{onClick:i[2]||(i[2]=(...s)=>v.newGame&&v.newGame(...s)),class:"new-game-btn"},"新游戏"),(0,e._)("button",{onClick:i[3]||(i[3]=(...s)=>v.stopGame&&v.stopGame(...s)),class:"stop-game-btn",disabled:!p.isPlaying}," 终止游戏 ",8,b)])]),(0,e._)("div",S,[(0,e._)("div",{class:"board",style:(0,a.j5)(v.boardStyle)},[((0,e.wg)(!0),(0,e.iD)(e.HY,null,(0,e.Ko)(p.cards,((s,i)=>((0,e.wg)(),(0,e.iD)("div",{key:i,class:(0,a.C_)(["card",{flipped:s.isFlipped,matched:s.isMatched}]),onClick:s=>v.flipCard(i)},[(0,e._)("div",C,[w,(0,e._)("div",T,(0,a.zw)(s.value),1)])],10,_)))),128))],4)]),(0,e._)("div",z,[p.bestScores[p.difficulty]?((0,e.wg)(),(0,e.iD)("div",P,[k,(0,e._)("p",null,"步数: "+(0,a.zw)(p.bestScores[p.difficulty].moves),1),(0,e._)("p",null,"时间: "+(0,a.zw)(v.formatTime(p.bestScores[p.difficulty].time)),1)])):(0,e.kq)("",!0)])])}t(7658);var G={name:"MemoryCard",data(){return{difficulty:"easy",difficultySettings:{easy:{size:4,emojis:["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼"]},medium:{size:6,emojis:["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🦁","🐯","🐮","🐷","🐸","🐵","🦄","🦒","🦊","🦁"]},hard:{size:8,emojis:["🐶","🐱","🐭","🐹","🐰","🦊","🐻","🐼","🦁","🐯","🐮","🐷","🐸","🐵","🦄","🦒","🦊","🦁","🐴","🦓","🦌","🐮","🐷","🐽","🐸","🐵","🙈","🙉","🙊","🐒","🦍","🦧"]}},cards:[],flippedCards:[],isPlaying:!1,moves:0,time:0,timer:null,matchedPairs:0,bestScores:{easy:null,medium:null,hard:null}}},computed:{boardStyle(){const s=this.difficultySettings[this.difficulty].size;return{gridTemplateColumns:`repeat(${s}, 1fr)`}},totalPairs(){return Math.pow(this.difficultySettings[this.difficulty].size,2)/2}},mounted(){this.loadBestScores(),this.newGame()},beforeUnmount(){this.stopTimer()},methods:{newGame(){this.stopTimer(),this.moves=0,this.time=0,this.matchedPairs=0,this.flippedCards=[],this.isPlaying=!0,this.initializeCards(),this.startTimer()},initializeCards(){const s=this.difficultySettings[this.difficulty].size,i=this.difficultySettings[this.difficulty].emojis,t=[];for(let e=0;e<s*s/2;e++){const s=i[e];t.push(s,s)}this.cards=this.shuffle(t).map((s=>({value:s,isFlipped:!1,isMatched:!1})))},shuffle(s){const i=[...s];for(let t=i.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[i[t],i[s]]=[i[s],i[t]]}return i},flipCard(s){!this.isPlaying||this.cards[s].isFlipped||this.cards[s].isMatched||this.flippedCards.length>=2||(this.cards[s].isFlipped=!0,this.flippedCards.push(s),2===this.flippedCards.length&&(this.moves++,this.checkMatch()))},checkMatch(){const[s,i]=this.flippedCards,t=this.cards[s],e=this.cards[i];t.value===e.value?(t.isMatched=!0,e.isMatched=!0,this.matchedPairs++,this.flippedCards=[],this.matchedPairs===this.totalPairs&&this.gameWon()):setTimeout((()=>{t.isFlipped=!1,e.isFlipped=!1,this.flippedCards=[]}),1e3)},gameWon(){this.stopTimer(),this.isPlaying=!1;const s={moves:this.moves,time:this.time},i=this.bestScores[this.difficulty];!i||s.moves<i.moves||s.moves===i.moves&&s.time<i.time?(this.bestScores[this.difficulty]=s,this.saveBestScores(),setTimeout((()=>{alert(`新记录！\n步数：${this.moves}\n时间：${this.formatTime(this.time)}`)}),300)):setTimeout((()=>{alert(`恭喜完成！\n步数：${this.moves}\n时间：${this.formatTime(this.time)}`)}),300)},stopGame(){confirm("确定要终止当前游戏吗？")&&(this.stopTimer(),this.isPlaying=!1,this.cards.forEach((s=>{s.isFlipped=!0})),setTimeout((()=>{alert(`游戏已终止！\n步数：${this.moves}\n时间：${this.formatTime(this.time)}`)}),300))},startTimer(){this.timer=setInterval((()=>{this.time++}),1e3)},stopTimer(){this.timer&&(clearInterval(this.timer),this.timer=null)},formatTime(s){const i=Math.floor(s/60),t=s%60;return`${i}:${t.toString().padStart(2,"0")}`},loadBestScores(){const s=localStorage.getItem("memory-card-scores");s&&(this.bestScores=JSON.parse(s))},saveBestScores(){localStorage.setItem("memory-card-scores",JSON.stringify(this.bestScores))}}},$=t(89);const F=(0,$.Z)(G,[["render",M],["__scopeId","data-v-533aed7d"]]);var j=F}}]);